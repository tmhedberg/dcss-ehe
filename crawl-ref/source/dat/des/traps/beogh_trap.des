##############################################################################
# Trap: Beogh Altar
##############################################################################

# By sevenhm.
# There are many monsters (Ogres / Trolls / etc) on the lava islands. There is
# a very good item sitting on the pressure plate trap.  When you stand on the
# trap, Beogh rages that you would steal the items that were left for him by
# worshippers, and creates lava bridges so that the monsters can leave the
# island and run towards you.
# If you are a worshipper of his, or if you are a godless Orc he asks you to
# approach the altar, and does not open the bridge.

{{
function bt_you_are_orcish()
  return you.race() == "Hill Orc" or you.race() == "Lava Orc"
end

function callback.beogh_warn_stepped(data, triggerable, triggerer, marker, ev)
  local x, y = marker:pos()

-- This checks to see if you worship Beogh or are a godless orc. If you do/are then
-- you get a positive message but if you don't, Beogh warns you that you should not
-- continue towards his altar.
  if you.god() == "Beogh" or (bt_you_are_orcish() and you.god() == "No God") then
     crawl.god_speaks("Beogh" , "Your presence is welcomed at the altar of Beogh.")
     dgn.grid(x, y, "floor")
  elseif bt_you_are_orcish() then
     crawl.god_speaks("Beogh" , "The orc god booms: Stay away, heretic!")
  else
     crawl.god_speaks("Beogh" , "The orc god booms: Stay away, mortal!")
  end
end

function callback.beogh_trap_stepped(data, triggerable, triggerer, marker, ev)
  local x, y = marker:pos()
-- This enacts the changes. First it checks to see if the player is a Beogh
-- worshipper or a godless orc (a potential worshipper). If the player is one of
-- these things nothing happens. Otherwise the trap is sprung.
  if monster_step == true then
    return
  elseif you.god() == "Beogh" or (bt_you_are_orcish() and you.god() == "No God") then
    dgn.grid(x, y, "floor")
  else
    crawl.god_speaks("Beogh", "Beogh's servants are called upon to defend the altar!")
    for slave in iter.slave_iterator("bridge", 1) do
      dgn.terrain_changed(slave.x, slave.y, "floor", false, false, false)
    end
    dgn.grid(x, y, "floor")
  end
end
}}

NAME:   trap_god_beogh
TAGS:   no_monster_gen
DEPTH:  Orc:2-
ORIENT: float

# t gives you a warning not to come closer
# ^ actually triggers the trap
KFEAT:  Z = altar_beogh
KPROP:  ^t.123*Z = no_rtele_into
{{
local tm = TriggerableFunction:new{func="callback.beogh_trap_stepped",
                                   repeated=false}
local tm2 = TriggerableFunction:new{func="callback.beogh_warn_stepped",
                                   repeated=false}
tm:add_triggerer(DgnTriggerer:new{type="player_move"})
tm2:add_triggerer(DgnTriggerer:new{type="player_move"})
lua_marker('^', tm)
lua_marker('t', tm2)
lua_marker('M', props_marker { bridge=1 })
}}
SUBST:  M:v, 1=1112 , 3=123 , ^t:. , *=*|
MONS:   w:7  generate_awake troll ; robe . nothing /\
        w:5  generate_awake ogre ;  giant club | robe /\
        w:5  generate_awake orc ; war axe | robe
MONS:   w:10 generate_awake rock troll ; robe . nothing /\
        w:5  generate_awake orc warrior ; broad axe | robe /\
        w:10 generate_awake two-headed ogre ; giant spiked club | robe
MONS:   w:10 generate_awake orc priest /\
        w:4  generate_awake orc high priest /\
        w:10 generate_awake orc warrior ; javelin ego:returning race:orcish /\
        w:4  generate_awake orc warlord ; bardiche good_item race:orcish
MAP
     x@xx
     x.xx
     x.xx
   xxx..xxx
  xxll..llxx
 xxlllltlllxxx
 xllllI.Illllx
xxlvvvv.vvvvlxx
xllv13v^v31vllx
xllv13M*M31vllx
xllv13M.M31vllx
xxvvvvMZMvvvvxx
 xvvvvv+vvvvvx
 xxxvv***vvxxx
   xxvvvvvxx
    xxxxxxx
ENDMAP
