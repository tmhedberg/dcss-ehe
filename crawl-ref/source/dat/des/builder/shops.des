lua {{
MAX_RANDOM_SHOPS = 5

-- If a level gets shops, how many there are.
-- Just one most of the time; expected value is 1.42.
function num_shops()
    if crawl.x_chance_in_y(5, 6) then
        return 1
    else
        return crawl.random_range(2, MAX_RANDOM_SHOPS)
    end
end
}}

NAME: serial_shops
TAGS: allow_dup extra luniq
DEPTH: D:4-, Depths, Orc, Elf, Shoals, Snake, Vaults
CHANCE: 20% (D)
CHANCE: 20% (Depths)
CHANCE: 30% (Orc)
CHANCE: 40% (Elf, Vaults)
CHANCE: 20% (Shoals, Snake)
{{
hook("post_place", function()
    local num = num_shops()

    if you.absdepth() > 10 and you.absdepth() <= 27
      and crawl.one_chance_in(30 - (you.absdepth() - 1))
    then
        dgn.place_maps { tag = "bzr_entry", count = 1 }
        num = num - 1
    end

    dgn.place_maps { tag = "shop", count = num }
end)
}}
MAP
ENDMAP

# Shop vaults: Tagged shop, may only contain a single shop.
NAME:   shop
TAGS:   allow_dup extra shop transparent
WEIGHT: 100
KFEAT:  O = any shop
MAP
O
ENDMAP

NAME:   shop_fountains
TAGS:   allow_dup extra shop transparent
WEIGHT: 10
KFEAT:  O = any shop
MAP
T.T
.O.
T.T
ENDMAP

NAME:   shop_statue
TAGS:   allow_dup extra shop no_rtele_into
WEIGHT: 10
KFEAT:  O = any shop
MAP
.G..O..G.
ENDMAP

NAME:   shop_coins
TAGS:   allow_dup extra shop transparent
WEIGHT: 3
KFEAT:  O = any shop
MAP
$$$
$O$
$$$
ENDMAP

NAME:   shop_scrolls
TAGS:   allow_dup extra shop transparent
WEIGHT: 1
KFEAT:  O = scroll shop
ITEM:   nothing w:30 / scroll of curse armour w:2 /\
        scroll of curse weapon w:2 / scroll of curse jewellery w:2 /\
        scroll of noise w:2 / scroll of random uselessness w:2
MAP
ddd
dOd
ddd
ENDMAP

#####################################################
# Custom venom shop Vault
NAME:    guppyfry_shop_venom
TAGS:    no_monster_gen
DEPTH:   D:4-, Depths
MONS:    ball python w:5 / adder / water moccasin, place:Snake:1
KFEAT:   v = general shop type:Serpentskin suffix:Sales count:7 ; \
         w:25 potion of poison | w:5 potion of strong poison | \
         w:8 blowgun | w:8 needle ego:poisoned | w:4 needle ego:curare | \
         w:14 arrow ego:poisoned | w:14 dart ego:poisoned | \
         w:3 ring of poison resistance | w:6 randbook disc:poison | \
         w:2 rod of venom | w:2 staff of poison | w:4 any weapon ego:venom | \
         w:4 any armour ego:poison_resistance | w:1 swamp dragon hide
SUBST:   ? = 2..
: if you.absdepth() < 13 then
SUBST:   2 = 1
: end
MAP
xxxxx
x???x
+?v?+
x???x
xxxxx
ENDMAP

#####################################################
# Custom earth shop Vault
NAME:    guppyfry_shop_earth
TAGS:    no_monster_gen
DEPTH:   D:11-, Depths
KMONS:   1 = gargoyle / boulder beetle / boring beetle / earth elemental / cyclops
KMONS:   2 = stone giant / earth elemental / catoblepas / deep troll earth mage / stone golem
ITEM:    stone
KFEAT:   v = general shop type:Pet suffix:Rocks count:7 ; \
         w:15 stone | w:15 large rock | w:8 sling | w:8 sling bullet | \
         w:4 sling bullet ego:steel | w:14 stone of tremors | \
         w:7 crystal ball of energy | w:4 wand of digging | \
         w:5 randbook disc:earth | w:2 book of the earth | w:2 book of geomancy | \
         w:4 staff of earth | w:4 wand of disintegration | w:1 crystal plate armour
SUBST:   ? = 2d.
: if you.absdepth() < 15 then
SUBST:   2 = 1
: end
MAP
.......
.xx+xx.
.x???x.
.m?v?m.
.x???x.
.xx+xx.
.......
ENDMAP

#####################################################
# Custom blood shop Vault
NAME:    guppyfry_shop_blood
TAGS:    no_monster_gen
DEPTH:   D:12-, Depths
KMONS:   1 = vampire / bat
KMONS:   2 = vampire / vampire mage / vampire knight
KFEAT:   v = general shop type:Blood suffix:Bar count:7 ; \
         w:60 potion of blood | w:20 potion of coagulated blood | \
         w:10 any weapon ego:vampiricism | w:9 randbook disc:necromancy | w:1 book of annihilations
SUBST:   ? = 2.Y
: if you.branch() == "D" then
SUBST:   2 = 1
: end
MAP
xxxxx
x???x
+?v?+
x???x
xxxxx
ENDMAP

#####################################################
# Off-brand ammo
NAME:  nicolae_offbrand_ammo
DEPTH:  D:5-, Depths, Orc
WEIGHT: 1
TAGS:  no_hmirror no_vmirror mini_float
KFEAT: S = general shop type:Off-Brand suffix:Ammunition count:7 ; \
       large rock ego:returning q:3 | large rock ego:exploding q:3 | \
       large rock ego:chaos q:3 | large rock ego:poisoned q:3 | \
       large rock ego:dispersal q:3 | large rock ego:flame q:3 | \
       large rock ego:frost q:3 | stone ego:flame | stone ego:returning | \
       stone ego:exploding | stone ego:dispersal | stone ego:poisoned | \
       stone ego:chaos | stone ego:frost | javelin ego:dispersal | \
       javelin ego:exploding | javelin ego:chaos | arrow ego:silver | \
       arrow ego:steel | arrow ego:exploding | arrow ego:returning | \
       arrow ego:penetration | arrow ego:chaos | bolt ego:exploding | \
       bolt ego:returning | bolt ego:dispersal | bolt ego:chaos | \
       sling bullet ego:dispersal | sling bullet ego:chaos | \
       sling bullet ego:returning
MAP
.......
.lllll.
.lG.Gl.
.l.S.l.
.lG.Gl.
.ll.ll.
.......
ENDMAP

#####################################################
# Sells only evil items.
NAME: nicolae_evil_shop
WEIGHT: 2
TAGS: transparent
DEPTH: D:6-, Depths
SUBST: G : YlG
# I couldn't decide on just one alliterative name.
: local shopname = util.random_from({"type:Blasphemy suffix:Boutique",
:   "type:Evil suffix:Emporium", "type:Profane suffix:Products",
:   "type:Sacrilege suffix:Store", "type:Wicked suffix:Wares"})
: kfeat("s = general shop " .. shopname .. " ; \
:   potion of blood | any weapon ego:draining w:15 | any weapon ego:pain w:5 | \
:   any weapon ego:vampiricism w:5 | demon blade w:5 | \
:   demon whip w:5 | demon trident w:5 | wand of draining | scroll of torment | \
:   staff of death | rod of demonology w:5 | \
:   bottled efreet w:5 | lantern of shadows w:5 | book of necromancy | book of death | \
:   book of unlife | randbook disc:necromancy w:5 | necronomicon w:1 | \
:   grand grimoire w:1 | scythe unrand:scythe_of_curses w:1 | \
:   long sword unrand:sword_of_zonguldrok w:1 | mace unrand:sceptre_of_torment w:1")
KFEAT: a = altar_kikubaaqudgha / altar_yredelemnul / altar_makhleb / \
           altar_beogh w:1 / altar_lugonu w:1
MAP
...   ...
.G.a.s.G.
...   ...
ENDMAP

#####################################################
# Items related to the good gods thematically; healing, silver, holy wrath, etc.
NAME: nicolae_good_shop
WEIGHT: 2
DEPTH: D:6-, Depths
TAGS: no_monster_gen no_trap_gen
SHUFFLE: _s
KFEAT: s = general shop type:Hallowed suffix:Reliquary ; \
   potion of heal wounds | potion of curing | potion of restore abilities | \
   wand of heal wounds | dart ego:silver w:2 | javelin ego:silver w:2 | \
   bolt ego:silver w:2 | any weapon ego:holy_wrath | scroll of holy word | \
   sling bullet ego:silver w:2 | amulet of faith w:2 | potion of cure mutation | \
   ring of positive energy w:5 | any armour ego:positive_energy w:5
KFEAT: _ = altar_the_shining_one / altar_zin / altar_elyvilon
MONS: angel
MAP
nnn
n1n
nnn
._.
...
.s.
ENDMAP

#####################################################
# All bardings, all the time.
NAME: nicolae_barding_shop
DEPTH: D:8-, Depths, Snake, !Snake:$
WEIGHT: 1
TAGS: transparent
: if you.branch() == "Snake" then
KMONS: s = naga w:50 / naga warrior
: else
KMONS: s = centaur w:50 / centaur warrior
: end
KFEAT: s = armour shop type:Specialty suffix:Armours count:6 use_all ; \
   naga barding | naga barding | naga barding good_item | \
   centaur barding | centaur barding | centaur barding good_item
MAP
.......
..xxx..
.x...x.
.x.s.x.
.x...x.
..xxx..
.......
ENDMAP

#####################################################
# Sells conjurations-heavy books, destructive wands and rods, etc.
NAME: nicolae_blasting_shop
DEPTH: D:8-, Depths
TAGS: no_trap_gen no_monster_gen no_item_gen
MARKER: s = lua:fog_machine { cloud_type = "flame", \
             pow_min = 3, pow_max = 5, delay_min = 50, delay_max = 90, \
             start_clouds = 1, size = 3, walk_dist = 0, spread_rate= 0 }
KFEAT: s = general shop type:Demolitions suffix:Depot ; \
   book of conjurations | book of power | book of annihilations | \
   randbook disc:conjuration | book of the tempests | book of clouds | \
   wand of fire | wand of fireball | wand of flame | wand of disintegration | \
   wand of frost | wand of cold | wand of lightning | wand of magic darts | \
   staff of conjuration | lightning rod | rod of inaccuracy | \
   rod of destruction | rod of striking | dart ego:exploding | \
   arrow ego:exploding | bolt ego:exploding | tome of destruction | \
   sling bullet ego:exploding | scroll of immolation | book of flames | \
   book of fire | book of air | manual of conjurations
FTILE: ' = floor_rough_red
COLOUR: ' = red
MAP
  ...
 ..x..
..'''..
.x's'x.
..'''..
 ..x..
  ...
ENDMAP

#####################################################
# Contains only four items: an evocable item, a staff, a randbook, and a wand,
# associated with one of each of the four elemental schools.
NAME: nicolae_elemental_shop
TAGS: no_monster_gen no_trap_gen no_item_gen no_pool_fixup
DEPTH: D:4-, Depths
SHUFFLE: AB
NSUBST: A = a / l / w / x
SUBST: B = .
KPROP: l = no_cloud_gen
MARKER: a = lua:fog_machine { cloud_type = "thin mist", \
            pow_min = 100, pow_max = 100, delay = 1, \
            size = 1, walk_dist = 0, start_clouds = 1 }
{{
  local evocables = {"lamp of fire","phial of floods",
                     "fan of gales","stone of tremors"}
  local staffs    = {"staff of fire","staff of cold",
                     "staff of air","staff of earth"}
  local randbooks = {"randbook disc:fire","randbook disc:ice",
                     "randbook disc:air","randbook disc:earth"}
  local wands     = {"wand of fire","wand of cold",
                     "wand of lightning","wand of digging"}
  local choices   = {1, 2, 3, 4}
  local i, j, temp
  for i = 4, 2, -1 do
     j = crawl.random_range(1,i)
     temp = choices[j] ; choices[j] = choices[i] ; choices[i] = temp
  end
  local inventory = evocables[choices[1]] .. " | " .. staffs[choices[2]] ..
           " | " .. randbooks[choices[3]] .. " | " .. wands[choices[4]]
  kfeat("s = general shop type:Elemental suffix:Accessories count:4 use_all ; "
         .. inventory )
}}
MAP
.......
.B.A.B.
.......
.A.s.A.
.......
.B.A.B.
.......
ENDMAP
