##########################################################################
# Helper function to weight the secondary food vaults properly.
# We want each level in the range to have a roughly even chance of placing
# the vault.
# The uppermost level we place it on is D:7, and the lowermost is D:14;
# thus the first level, D:7, has a 1 in 8 chance of placing it. If it
# doesn't place on D:7, D:8 has a 1 in 7 chance of placing it; D:9 has a
# 1 in 6 chance, etc. up until D:14 has a 100% chance.
# If the levels are traversed in order, there is therefore an even
# distribution of where the food vault is placed.
##########################################################################
{{
function food_weight(e, top)
  for i = 14, top, -1 do
    e.depth_weight("D:" .. i, 10000 / (15 - i))
  end
end
}}
##########################################################################
# Guarantee at least some really minimal food supply.
##########################################################################

NAME:   first_bread
DEPTH:  D:2-5
CHANCE: 2500, 3333 (D:3), 5000 (D:4), 10000 (D:5)
TAGS:   uniq_first_food extra transparent
ITEM:   bread ration no_mimic
MAP
d
ENDMAP

##########################################################################
# Midgame food supply.
#
# These should give around 20k nutrition.  Currently all strict
# carnivores have a large buffer so they can survive lulls in edible supply
# well until Crypt, so all-veggie is ok.
#
# normal/herbi/carni

# 17.6k/26.6k/0
NAME:   the_bakery
DEPTH:  D:7-14
# Previously this was a 25% CHANCE; I'm assuming this was meant to weight this
# higher than the other food vaults, which mostly had a 15% CHANCE, but
# placing by chance tag doesn't work that way. Hence, there's also a WEIGHT
# tag to give it more weight than other food vaults.
: food_weight(_G, 7)
WEIGHT: 25
TAGS:   uniq_second_food extra chance_second_food
ITEM:   bread ration q:2 no_mimic
: if crawl.one_chance_in(8) then
:   dgn.delayed_decay(_G, 'e', 'spriggan name:baked n_adj n_spe n_des corpse')
: else
SUBST: =e = x
: end
SUBST: = = +
MONS:   spriggan col:white name:baker n_suf ; robe . dagger
MAP
xxxxxx
xdd=ex
x.xxxx
x.1xxx
x+xxxx
ENDMAP

# 18.6k, min 14k
NAME:   david_nohive_1
DEPTH:  D:8-14
: food_weight(_G, 8)
WEIGHT: 15
TAGS:   uniq_second_food extra chance_second_food
MONS:   queen bee, killer bee
ITEM:   w:2 honeycomb no_mimic / w:1 royal jelly no_mimic
COLOUR: a = yellow
TILE:   a = wall_wax
SUBST:  a = x
MAP
............
....aaaa....
..a2a2aaaa..
..aada2a2a..
.aa2ada2aaa.
.a2ada1ada2.
.aa2adada2a.
.aaa2a2a2aa.
..a2ada2aa..
...aa2aa2a..
....aaaa....
............
ENDMAP

# 20.6k/46.5k/0
NAME:     blue_anna_alchemist
DEPTH:    D:8-14
: food_weight(_G, 8)
WEIGHT: 15
TAGS:     uniq_second_food extra chance_second_food mini_float
SUBVAULT: Z : fruiting_plant
SUBVAULT: Y : fruiting_plant
SUBVAULT: X : fruiting_plant
SUBVAULT: W : fruiting_plant
KITEM:    p = potion of curing / potion of heal wounds / \
              potion of restore abilities w:1 / potion of poison w:3 / \
              potion of strong poison w:1 / potion of confusion w:1 / nothing
KMONS:    1 = deep dwarf artificer
MAP
ZZZZZ..YYYYY
ZZZZZ..YYYYY
ZZZZZ..YYYYY
ZZZZZ..YYYYY
............
............
XXXXX..WWWWW
XXXXX..WWWWW
XXXXX..WWWWW
XXXXX..WWWWW
x.x.c++c.x.x
ccccc..ccccc
cppc....cppc
cp.+.1..+.pc
cccc....cccc
cccccccccccc
ENDMAP

# 23.2k/19.9k/13k
NAME:   hangedman_fish_farm
DEPTH:  D:7-14
: food_weight(_G, 7)
WEIGHT: 15
TAGS:   uniq_second_food extra chance_second_food no_monster_gen no_pool_fixup \
        patrolling
KMONS:  A = merfolk ; spear
KMONS:  B = big fish / nothing
KMONS:  C = big fish
KFEAT:  gBC = shallow_water
ITEM:   meat ration q:2 no_mimic, bread ration q:3 no_mimic, throwing net
:       dgn.delayed_decay(_G, 'g', 'big fish corpse')
MAP
xxxxxx
xgxedx
+..fAx
xCBBBx
xxxxxx
ENDMAP

# 18k/18.8k/16.6k (min 18k/12k/12k), plus perishable 6k/6k/0
NAME:   hangedman_pestilent_swarm
DEPTH:  D:8-14
: food_weight(_G, 8)
WEIGHT: 15
TAGS:   uniq_second_food extra chance_second_food no_monster_gen patrolling
MONS:   spider / brain worm w:5 / goliath beetle / giant centipede
MONS:   yellow wasp w:7 / rock worm w:5 / boring beetle / soldier ant w:13 / giant slug
ITEM:   cheese q:3 no_mimic / beef jerky q:3 no_mimic / lemon q:3 no_mimic
ITEM:   potion of porridge no_mimic, honeycomb q:6 no_mimic
MAP
.xxxxxxx
@xx.x.xcccc
 ..x1x2cdec
@xx.x.x+fdc
.x1x.x2cccc
 xxxxxxx
ENDMAP

# 25k (min 20k)
NAME:   hangedman_little_slice_of_home
DEPTH:  D:8-14
: food_weight(_G, 8)
WEIGHT: 10
TAGS:   uniq_second_food extra chance_second_food
KMONS:  A = jelly
KMONS:  B = ooze
: if you.absdepth() > 10 then
KMONS:  C = slime creature
: end
KITEM:  C = royal jelly q:4 no_mimic / royal jelly q:6 no_mimic
KFEAT:  C = altar_jiyva w:1 / . w:20
KMASK:  W = no_monster_gen
MAP
 .Wxxxxx
.Wxxxxxxx
@.xBBAxxx
 W=BxA=Cx
@.xBBAxxx
.Wxxxxxxx
 .Wxxxxxx
ENDMAP

# 22.3k/18.8k/19k (min 9.6k)
NAME:     hangedman_ranch
DEPTH:    D:8-14
: food_weight(_G, 8)
WEIGHT:   10
TAGS:     uniq_second_food extra chance_second_food no_monster_gen patrolling
SUBVAULT: Z : fruiting_plant
KMONS:    A = three-headed hydra / w:5 two-headed hydra
KMONS:    B = sheep
KMONS:    C = yak
KMONS:    D = big kobold
KMONS:    E = big kobold ; nothing
KMONS:    F = plant
KITEM:    C = cheese q:4 no_mimic
KITEM:    E = falchion ego:flaming ident:type / short sword ego:flaming
KITEM:    H = meat ration q:2 no_mimic
KITEM:    I = sabre
KFEAT:    EF = shallow_water
MAP
cccccccccc
cAH+...CCc
cIDcD..BBc
c+ccm+++cc
x.WFZZZZZx
xFWWZZZZZx
xWEFZZZZZx
xFW.ZZZZZx
xFFW.W.W.x
xxxxx@xxxx
ENDMAP

# 15.3k/34.2k/0
NAME:   hangedman_tree_tricks
DEPTH:  D:8-14
: food_weight(_G, 8)
WEIGHT: 10
TAGS:   uniq_second_food extra chance_second_food no_monster_gen
NSUBST: T = 1:. / 1:t
KMONS:  1 = wandering mushroom
KMONS:  2 = oklob sapling
KITEM:  12A_ = apricot q:2 no_mimic / pear q:2 no_mimic / \
               apple q:2 no_mimic / banana q:2 no_mimic / \
               lemon q:2 no_mimic / orange q:2 no_mimic
KFEAT:  _ = altar_fedhas
MAP
 tttttttttt
tttt.ttttttt
@tt1t.tttttt
t.tt.t.Tt2tt
t.t.ttT.1.tt
t.t.ttt1_Att
t.t1tt2.Attt
tt.ttttttttt
 tttttttttt
ENDMAP

# 16.8k/21.3/8k
NAME:   hangedman_tell_no_tales
DEPTH:  D:9-14
: food_weight(_G, 9)
WEIGHT: 10
TAGS:   uniq_second_food extra chance_second_food no_monster_gen no_item_gen patrolling
MONS:   spriggan skeleton / centaur skeleton
MONS:   troll skeleton / hungry ghost
MONS:   shadow imp
: if you.absdepth() < 13 then
KMONS:  A = trapdoor spider w:6 / unseen horror / nothing w:4
: else
KMONS:  A = vapour w:4 / trapdoor spider w:6 / unseen horror / nothing w:2
: end
ITEM:  sultana q:1 no_mimic / grape w:8 q:1 no_mimic / potion of water
ITEM:  sultana mimic q:1 w:8 / grape mimic w:8 q:1
ITEM:  honeycomb q:2, bread ration q:3
: if crawl.coinflip() then
:     dgn.delayed_decay(_G, 'h', 'spriggan skeleton')
: else
:     dgn.delayed_decay(_G, 'h', 'ogre skeleton')
: end
: if crawl.coinflip() then
:     dgn.delayed_decay(_G, 'A', 'spriggan skeleton')
: else
:     dgn.delayed_decay(_G, 'A', 'ogre skeleton')
: end
SUBST:  D : DDDDE
NSUBST: D = 1:A / 2:d / 2:f / 1:h, E = 1:d / 1:e / 2:f / 2:h
MAP
 cccccccccc
ccxx1xh=DDc
c.x.x..mDDc
@.d.x2.mDDc
c.x.x..cc+c
ccxx1x.c3gc
 cccccccccc
ENDMAP

# 20.6k/23k/12.5k (min 18k/6k/0)
NAME:    hangedman_stone_soup
DEPTH:   D:8-14
: food_weight(_G, 8)
WEIGHT:  10
TAGS:    uniq_second_food extra chance_second_food patrolling no_rotate no_vmirror
# Branch representatives working together to cook some soup:
# D, Orc, Elf, Snake, Shoals, Vaults, Crypt, Hells, Zot.
KMONS:   A = kobold
KMONS:   B = orc
KMONS:   C = deep elf fighter
KMONS:   D = naga
KMONS:   E = merfolk
KMONS:   F = human
KMONS:   G = necrophage
KMONS:   H = crimson imp
KMONS:   I = draconian
KITEM:   1 = stone q:1 no_pickup / large rock q:1 w:5
KITEM:   Ya = royal jelly no_mimic / meat ration no_mimic / \
              bread ration no_mimic
KITEM:   b = honeycomb no_mimic / cheese no_mimic / apricot q:2 no_mimic / \
             apple q:2 no_mimic / choko q:2 no_mimic
KFEAT:   1Yab = shallow_water
KMASK:   1Yac = no_monster_gen
MARKER:  Y = lua:fog_machine { cloud_type = "steam", pow_min = 1, \
                 pow_max = 10, delay = 60, size = 1, walk_dist = 0 }
MARKER:  Z = lua:fog_machine { cloud_type = "flame", pow_min = 100, pow_max = 100, \
                 delay = 10, size = 1, walk_dist = 0, excl_rad = -1 }
NSUBST:  c = 2:a / *:b
SHUFFLE: ABCDEFGHI
MAP
 .......
..A...B..
..vv.vv..
..vcccv..
..vY1cv..
..vcccv..
.CvvvvvD.
...Z.Z...
 .......
ENDMAP

# 22.0k/29.5k/0
# A couple of tengu have staked out a little piece of the dungeon.
NAME:   grunt_tengu_nest
DEPTH:  D:9-14
: food_weight(_G, 9)
WEIGHT: 15
TAGS:   uniq_second_food extra chance_second_food no_monster_gen patrolling
MONS:   tengu ; war axe | scimitar | long sword, plant
NSUBST: 2 : 3:2 / *:.
ITEM:   bread ration no_mimic / snozzcumber q:3 no_mimic / \
        orange q:4 w:5 no_mimic / orange q:5 w:5 no_mimic / \
        banana q:4 w:5 no_mimic / banana q:5 w:5 no_mimic / \
        lemon q:4 w:5 no_mimic / lemon q:4 w:5 no_mimic / \
        pear q:6 no_mimic / apple q:6 no_mimic / apricot q:6 no_mimic / \
        choko q:7 no_mimic / rambutan q:7 no_mimic / lychee q:7 no_mimic
MAP
 xx+xx
xx2.2xx
x22222x
x22222x
xd1t1dx
xxdddxx
 xxxxx
ENDMAP

# 22.2k/17.7k/12.6k
# An ogre roasts intruders over his little campfire.
NAME:   grunt_ogre_cave
DEPTH:  D:7-14
: food_weight(_G, 7)
WEIGHT: 15
TAGS:   uniq_second_food extra chance_second_food no_monster_gen no_trap_gen \
        patrolling
{{
  local twochance = you.absdepth() - 8
  local onechance = 7 - twochance
  if twochance <= 0 then
    mons("ogre")
  elseif onechance <= 0 then
    mons("two-headed ogre")
  else
    mons("ogre w:" .. onechance .. " / two-headed ogre w:" .. twochance)
  end
  dgn.delayed_decay(_G, 'g', 'orc skeleton / human skeleton / elf skeleton'
                             .. ' / dwarf skeleton')
}}
ITEM:   bread ration q:3 no_mimic, beef jerky q:3 no_mimic, throwing net
MARKER: O = lua:fog_machine { cloud_type = "flame", pow_min = 10, \
                              pow_max = 10, delay = 10, size = 1, \
                              walk_dist = 0, excl_rad = 0 }
MAP
 xxxxx
xxxxxxx
xxeegxx
xx1Ogxx
xxdf.xx
 xxx.xx
 xx.xxx
xxx.xxx
xx.xxx.
 .g.
  @
ENDMAP

# 20.8k/23.8k/12.0k
# Welcome to Pandemonium Pizzeria; is this for carry-out or delivery?
# (Ideally the cashier would have a silly cap, but they can't wear caps.)
NAME:   grunt_pizzeria
DEPTH:  D:8-14
: food_weight(_G, 8)
WEIGHT: 10
TAGS:   uniq_second_food extra chance_second_food no_monster_gen no_trap_gen \
        patrolling
MONS:   deep elf fighter ; sabre race:elven | falchion race:elven / \
        human hd:5 ; short sword | sabre / \
        deep dwarf ; hand axe race:dwarven / \
        orc warrior ; dagger race:orcish / \
        spriggan ; dagger
ITEM:   slice of pizza q:8 no_mimic, bread ration q:2 no_mimic
MARKER: O = lua:fog_machine { cloud_type = "flame", pow_min = 10, \
                              pow_max = 10, delay = 10, size = 1, \
                              walk_dist = 0, excl_rad = 0 }
MAP
xxxxxxx
xvvvdex
xvO+..x
xvvv.xx
x$1...x
xmmm.xx
x.....x
xmm+mmx
 ..@..
ENDMAP

# 21.6k/21.6k/21.6k
NAME:   grunt_rat_hole
DEPTH:  D:7-14
: food_weight(_G, 7)
WEIGHT: 15
TAGS:   uniq_second_food extra chance_second_food no_monster_gen no_trap_gen \
        patrolling
MONS:   rat, grey rat, green rat, orange rat
ITEM:   cheese q:3 no_mimic
: if you.absdepth() < 11 then
NSUBST: 4 = 1:4 / *:3
: else
NSUBST: 2 = 2:3 / *:2
NSUBST: 1 = 5:2 / *:1
: end
MAP
 xxxxx
xxd4dxx
xd.d.dx
x24142x
x12321x
xx.1.xx
xxxx1xx
xxxdxxx
xx1xxx
 xx1xx
  .@.
ENDMAP

# 22.6k/22.6k/15k (+ perishable up to 16k, avg 6k)
NAME:   grunt_livestock
DEPTH:  D:7-14
: food_weight(_G, 7)
WEIGHT: 15
TAGS:   uniq_second_food extra chance_second_food no_monster_gen no_trap_gen \
        patrolling
MONS:   human hd:5 ; animal skin . hand axe
{{
  local sheep_weight = 14 - you.absdepth()
  if sheep_weight <= 0 then
    mons("hog / yak")
  else
    mons("sheep w:" .. sheep_weight .. " / hog w:1 / yak w:1")
  end
}}
ITEM:   cheese q:9 no_mimic, bread ration q:2 no_mimic
ITEM:   beef jerky q:2 no_mimic
KFEAT:  K = iron_grate
KFEAT:  - = open_door
MAP
.xxxxxxx
@+...fdx
.x...1ex
 xKK-KKx
 x2...2x
 x.2.2.x
 xxxxxxx
ENDMAP
