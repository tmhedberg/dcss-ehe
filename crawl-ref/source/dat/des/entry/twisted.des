##############################################################################
# -2- Twisted maps.
##############################################################################
#
# The maps in this section are harder to read... which means that you can
# learn more from them. There's a bunch of reasons why maps become rather
# complicated: several layers of SUBST/SHUFFLE operations, serious use of
# lua, use of SUBVAULTs or just plain obfusciation. Some maps simply have
# extremely long headers, so we put them here.
##############################################################################

##############################################################################
# 37 x 22 -- this one is huge and twisted, but it's also old...
NAME:   dpeg_entry_water_fire
TAGS:   entry no_monster_gen no_pool_fixup no_rotate
ORIENT: float
: local rnd = crawl.random2(12)
: if rnd == 0 then
NSUBST: A=*:., a=1:./*:l, b=1:./*:l
: elseif rnd == 1 then
NSUBST: B=*:., c=1:./*:l, d=1:./*:l, e=1:./*:l, f=1:./*:l, g=1:./*:l
: elseif rnd == 2 then
NSUBST: C=*:., h=1:./*:l, i=1:./*:l, j=1:./*:l, k=1:./*:l
: elseif rnd == 3 then
NSUBST: D=*:., m=1:./*:w, n=1:./*:w, o=1:./*:w, p=1:./*:w
: elseif rnd == 4 then
NSUBST: E=*:., q=1:./*:w, r=1:./*:w, s=1:./*:w
: elseif rnd == 5 then
NSUBST: F=*:., t=1:./*:w, u=1:./*:w, v=1:./*:w
: else
SUBST:  X=+, Y:YYY+
NSUBST: Y=1:+/*:x
: end
SUBST:  XY=x, ABCabcdefghijk=l, DEFmnopqrstuv=w
KPROP:  1G = no_rtele_into
MONS:   bush w:1 / plant w:6 / fungus w:9 / nothing w:45
MONS:   fungus / nothing w:20
SUBST:  "=2', '=2..., 2:222.WW
: if crawl.coinflip() then
SUBST:  Z=x, z=+, V=x
: elseif crawl.coinflip() then
SUBST:  Z=x, V=+
NSUBST: z = 1:+ / *:x
: else
SUBST:  Zz=., V=x
: end
MARKER: { = lua:props_marker { entry_stairs=1 }
veto {{
  local slave = dgn.find_marker_positions_by_prop( "entry_stairs", 1 )
  if slave == nil then return false end
  if slave[1] == nil then return false end
  crawl.mpr("(".. slave[1].x .. "," .. slave[1].y .. ")")
  return not dgn.has_exit_from(slave[1])
}}
MAP
            xxxxxx@xxxxxx
       xxxxxx'''''''''''xxxxxx
   xxxxx.......'"""""'.......xxxxx
 xxx..........lll222www..........xxx
xx......lllkkklll222wwwppwwww......xx
x....gllglllCllll222wwwwDwwwwwww....x
x.lllffBxlljjjlxxXXXxxwwoowwxwwssww.x
xlAlxlBlxlllCxxx11111xxxwDwwxwwExwvvx
xllAxeeexllCxx111111111xxnnwxwEwxwFwx
xlbbxlBlxliix11111111111xwDwxrrrxwuux
xlAlxlddxlClx11111G11111xmmwxwEwxwwFx
xaalxlccxhhhx11111111111xwDwxqqqxwttx
x...x...x...xx111111111xx...x...x...x
x...V...V...xxYx11111xYxx...V...V...x
xZzZx...x...xx.xxxYxxx.xx...x...xZzZx
x..ZxZ..x...V...V...V...V...x..ZxZ..x
x....ZzZx...x...x.}.x...x...xZzZ....x
xx......xZzZxZzZx...xZzZxZzZx......xx
 xxx...........ZxZzZxZ...........xxx
   xxxxx.....................xxxxx
       xxxxxx.....{.....xxxxxx
            xxxxxxxxxxxxx
ENDMAP

#########################################
# Representatives of all player genuses, locked up.
NAME:    kb_entry_jail
TAGS:    entry no_monster_gen no_item_gen
ORIENT:  north
SHUFFLE: ABCDEFGHIJKLMNOPQRSTUV
KFEAT:   ABCDEFGHIJKLMNOPQRSTUV = floor
KMONS:   A = human ; nothing
KMONS:   B = elf ; nothing
KMONS:   C = dwarf ; nothing
KMONS:   D = orc ; nothing
KMONS:   E = merfolk ; nothing
KMONS:   F = halfling ; nothing
KMONS:   G = kobold ; nothing
KMONS:   H = spriggan ; nothing
KMONS:   I = naga ; nothing
KMONS:   J = centaur ; nothing
KMONS:   K = ogre ; nothing
KMONS:   L = troll
KMONS:   M = minotaur ; nothing
KMONS:   N = tengu ; nothing
KMONS:   O = draconian ; nothing
KMONS:   P = demonspawn ; nothing
KMONS:   Q = mummy
KMONS:   R = felid
KMONS:   S = ghoul ; nothing
KMONS:   T = vampire spells:. ; nothing
KMONS:   U = demigod ; nothing
KMONS:   V = octopode ; nothing
MAP
 ccccc
 c.{.c
 c...c
ccc+ccc
cAm.mBc
ccc.ccc
cCm.mDc
ccc.ccc
cEm.mFc
ccc.ccc
cGm.mHc
ccc.ccc
cIm.mJc
ccc.ccc
cKm.mLc
ccc.ccc
cMm.mNc
ccc.ccc
cOm.mPc
ccc.ccc
cQm.mRc
ccc.ccc
cSm.mTc
ccc.ccc
cUm.mVc
ccc+ccc
  c@c
ENDMAP

##############################################################
NAME:    minmay_entry_shattered_statue
TAGS:    entry
ORIENT:  float
ITEM:    stone q:4 / stone q:2 / nothing
ITEM:    stone q:3 w:5 / stone q:1 / nothing
ITEM:    stone q:2 w:5 / stone q:1 w:5 / nothing
ITEM:    stone q:1 w:5 / nothing
ITEM:    stone q:1 w:1 / nothing w:20
TILE:    G = dngn_granite_stump
:        set_feature_name("granite_statue", "granite stump")
MAP
   xxxxxxx
  xx.....xx
  x..h{h..x
  xxhggghxx
   xxx+xxx
 xxxeeeeexxx
xxgfedddefgxx
+hgfedGdefgh+
xxgfedddefgxx
 xxxeeeeexxx
   xxxxxxx
ENDMAP

#########################################
# A horror show for the beginning adventurer
NAME:    shiori_entry_whats_in_store_for_you
TAGS:    entry no_monster_gen no_pool_fixup no_item_gen
ORIENT:  west
SHUFFLE: =@/AB ,  AB/CD
SUBST:   A=+ , B=@ , C=x , D=x
SUBST:   = = +
NSUBST:  T = 1=T... / *=.
KFEAT:   T = net trap
# Seemingly pointless, since there are no active foes here... but
# it had an unnerving effect on me the one time it happened by chance
# ("Ack! Now I'm trapped too! Help!") so I coded it in. ^.^
NSUBST:  M = 2=E / *=M E:2
KFEAT:   E = teleport trap
KFEAT:   MNOQ = shallow_water
SHUFFLE: M/N/O/P/Q
SUBST:   P = MNO
#
# Player monsters:
KMONS: M = human / elf / orc; nothing / naga; nothing / centaur; nothing / \
           draconian; nothing / ogre; nothing / minotaur / troll / kobold / \
           mummy / ghoul / spriggan; nothing / dwarf; nothing / felid / \
           octopode; nothing / vampire spells:.
# Player monsters, zombie versions (ghouls drop out because they need sustenance
# and can't be reanimated once starved):
KMONS: N = human zombie / elf zombie / orc zombie / naga zombie / ogre zombie / \
           centaur zombie / draconian zombie / minotaur zombie / troll zombie / \
           kobold zombie / mummy / spriggan zombie / merfolk zombie / \
           dwarf zombie / felid zombie / octopode zombie
# Player monsters, skeleton versions:
KMONS: O = human skeleton / elf skeleton / orc skeleton / naga skeleton / \
           centaur skeleton / draconian skeleton / ogre skeleton / \
           minotaur skeleton / troll skeleton / kobold skeleton / mummy / \
           spriggan skeleton / dwarf skeleton / merfolk skeleton / felid skeleton
# And now for something completely different (if any of these turn out to be
# able to escape or project spells out of their cells, they should be removed):
KMONS: Q = orb of fire / ice dragon / shadow dragon / iron dragon / \
           w:1 golden dragon / large abomination / tentacled monstrosity / \
           w:1 black draconian; nothing / w:1 mottled draconian; nothing / \
           w:1 yellow draconian; nothing / w:2 green draconian; nothing / \
           w:1 purple draconian; nothing / w:2 red draconian; nothing / \
           w:1 white draconian; nothing / w:1 pale draconian; nothing / nothing
MAP
xxxxxxxxxxxxxx     xxxxxxxxx
xxxxxxxxMxMxMxxxxxxxMxMxMxMx
xxxxxxxxmxmxmxMxMxMxmxmxmxmxxxx@x
xxxxxxx......xmxmxmx.....T.mMxx=xx
xxxxxx{..............xmxmxTxmx...xxx
xxxxxxx..........xmxmxMxMm.T.T.>.mMx
xxxxxxxxmxmxmxmxmxMxMxxxxxmxmx...xxx
xxxxxxxxMxMxMxMxMxxxxx   xMxMxxAxx
xxxxxxxxxxxxxxxxxx       xxxxxxBx
ENDMAP

#####################################
# I am the great and powerful Oz! Pay no attention to the man behind
# the curtain! ...if you stick close to the wall, you are always able
# to avoid the flame clouds.
NAME:   shiori_entry_oz
TAGS:   entry
ORIENT: float
MONS:   kobold / goblin / hobgoblin / nothing
MARKER: # = lua:fog_machine { \
            pow_max = 5, delay_min = 100, delay_max = 150, \
            size = 4, start_clouds = 1, \
            excl_rad = 1, \
            cloud_type = "flame" }
KFEAT:  # = l
FTILE:  ' = floor_rough_red
COLOUR: ' = red
SUBST:  ' = .
MAP
bbbbbbbbbbb
b....{....b
b.........b
b.........b
b..b...b..b
b.........b
b.........b
b..b'''b..b
b..'''''..b
@..'#'#'..@
b..b'G'b..b
b.........b
bbbb+b+bbbb
 +1+.b.+1+
 bbb.b.bbb
   b@b@b
ENDMAP

############################################################################
NAME:    dpeg_entry_concentric_ovals
TAGS:    entry no_monster_gen no_rotate
ORIENT:  float
SUBST:   ' : Wlncxxxv, " : Wlncxxxv
MAP
.........................
.......xxxxx+xxxxx.......
....xxxxxxxx.xxxxxxxx....
...xxxxxx.......xxxxxx...
..xxxxx...........xxxxx..
..xxxx....'''''....xxxx..
..xxx...'''''''''...xxx..
.xxxx..''.......''..xxxx.
.xxx...'..""+""..'...xxx.
.xxx..''.""..."".''..xxx.
.xxx..''."".{."".''..xxx.
.xxx..''.""..."".''..xxx.
.xxx...'.."""""..'...xxx.
.xxxx..''.......''..xxxx.
..xxx...''''.''''...xxx..
..xxxx....''+''....xxxx..
..xxxxx...........xxxxx..
...xxxxxx.......xxxxxx...
....xxxxxxxxxxxxxxxxx....
.......xxxxxxxxxxx.......
.........................
ENDMAP

##############################################################################
NAME:    dpeg_entry_solitude
TAGS:    entry no_monster_gen
ORIENT:  float
SHUFFLE: C{! / B(' / V["
SUBST:   ([ = .
SUBST:   C=., !=@
SHUFFLE: B(' / zzz, V[" / yyy
SUBST:   z=x, y=x, B=., '=+, V=., "=+
NSUBST:  . = 1:d / *:.
ITEM:    stone / dart
MAP
xxxxxxxxxxxxxxxxxxx....@
xxxxxxxCCCCCCCxxxxx.....
xxxxxCCxxxxxxxCCxxx.....
xxxxCxxxVVVVxxxxCxx.....
xxxCxxVVxxxxVVxxxCx.....
xxCxxVxxxBBxxxVxxCxxxxx'
xxCxVxxxBxx(xxxVxxCxxxBx
xCxxVxxBxxxxbxxVxxCxxxBx
xCxxVxBxx{cvxxVxxxCxxxBx
xCxVxxBxCxxx[VxxxCxxxBxx
xCxVxxBxxCCxxxxCCxxxBxxx
xCxVxxxBxxxCCCCxxxBBxxxx
xCxxVxxxBBxxxxxxBBxxxxxx
!xxxxVxxxxBBBBBBxxx.....
xxxxxxVVVxxxxxxxxV".....
xxxxxxxxxVVVVVVVVxx.....
xxxxxxxxxxxxxxxxxxx....@
ENDMAP

##############################################################################
NAME:    dpeg_entry_connections
TAGS:    entry
ORIENT:  float
SHUFFLE: {1/[2/(3/]4, Aa/Bb/Cc/Dd/Ee
SUBST:   ([ = .
SUBST:   A=+, a=...>, BCDEbcde=x
SUBST:   1=@, 2:2., 3:33., 4:444., 234:x
MAP
22222222xxxxx333
2[......BeeeD..3
2.......EbbdE..3
xAxxECxDxxdbB.(3
xxAxxecxddxaA..3
x...EcddxDAxxCxx
x.{.DdcbB......4
x...Bbbcx..]...4
x...CccxC......4
x111xxxxx4444444
ENDMAP

###################################################
# A simple little maze-like thing
NAME:    shiori_entry_maze
ORIENT:  float
TAGS:    entry no_monster_gen
SHUFFLE: [{(
NSUBST:  A= 2= + / 2= +x / *= x
NSUBST:  B= 2= + / 2= +x / *= x
NSUBST:  C= 2= + / *= +x
SUBST:  @ = @+
MONS:    toadstool
MAP
xxx@xxx@xxx@xxx
x.111.B0B.111.x
xCx1xAxxxAx1xCx
@.x.A11111A.x.@
x1x.x11111x.x1x
x1xBx11>11xBx1x
x1x.x11{11x.x1x
@.x.A11111A.x.@
xCx1xAxxxAx1xCx
x.111.B0B.111.x
xxx@xxx@xxx@xxx
ENDMAP

##############################################################################
# 41 x 20 -- this one is huge and twisted, but hopefully worth it.
# From cave/forest to hall.
NAME:     erik_entry_cave_to_civilisation
TAGS:     entry no_rotate
WEIGHT:   20
ORIENT:   float
SHUFFLE:  {[(
SUBST:    ?=C., !=CCC., C:ccxxt, ([ = .
SUBVAULT: _ : cave_to_hall_subvault / cave_to_temple_subvault w:5
MAP
xxxxxxxxxxxxxxxxxxxxxxxxxxx
xCCCCCCCCCCCCCCCCCCCCCCCCCxxxxxxxxxxxxxxx
xC[!.!C...CC.??...C?....................x
xC..CCC.CC.?C...C.?..C....C.............x
xC!C..C..C.C..?..C..?C.?.C____________..x
xC..CC!C.CC..C?.CC.......?____________..x
xC.CC...C.C..C..??..C..?C.____________..x
xC!.C.CCC.?C.?.C..CC...C..____________..x
xCCC.CCC.C.C..C...?..C....____________..x
xC{CCC..CC.CC......CC.....____________..@
xC.C...C.CC.C..?C.........____________..x
xC!.CCCCCC.C...C..C?.CC...____________..x
xCCCC.C...C..C...C...?....____________..x
xC!!C!.CCC.C?....?.C...?..____________..x
xC..C!.C.C...C?...CC?...CC____________..x
xCC..CC.?C.CC....C....C...C._________...x
xC(.C..C.CC...C?.....??.................x
xCCCCCCCCCCCCCCCCCCCCCCCCCCxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxx
ENDMAP

NAME:    erik_entry_cave_to_hall
TAGS:    cave_to_hall_subvault no_rotate
SHUFFLE: TTGGVY
SUBST:   X : cX
NSUBST:  X = 1:+ / *:c
KMASK:   T = no_monster_gen
MAP
...T....ccc.
.......ccccc
.......ccccc
.cXXc...ccc.
cX00Xc......
X>cc%X...T..
cXc%Xc......
.cXXc...ccc.
.......ccccc
.......ccccc
...T....ccc.
  .........
ENDMAP

NAME:    erik_entry_cave_to_temple
# Intentionally higher chances for the non-Temple gods.
TAGS:    cave_to_temple_subvault no_rotate
SUBST:   X : nnG
NSUBST:  ' = 12:1 / 4:2 / 1:3 / *:.
KPROP:   'tCD> = no_rtele_into
: local rnd = crawl.random2(9)
: if rnd == 0 then
KFEAT:   C = altar_beogh
SUBST:   D=I, G=I
KMONS:   3 = orc warrior
KMONS:   1 = orc / nothing
KMONS:   2 = orc wizard / orc / nothing
: elseif rnd == 1 then
KFEAT:   C = altar_lugonu
KFEAT:   D = enter_abyss
KMONS:   1 = quasit / iron imp / lemure / ufetubus / demonic crawler w:5
SUBST:   t : U....
: elseif rnd == 2 then
KFEAT:   C = altar_jiyva
SUBST:   D = .
SUBST:   t : U....
KMONS:   1 = jelly / ooze / giant amoeba w:3 / brown ooze w:2 / pulsating lump w:1
:else
SUBST:   D = C
SHUFFLE: VCd
KITEM:   d = any scroll
: if crawl.coinflip() then
KMONS:   1 : gnoll / orc
: elseif crawl.coinflip() then
KMONS:   2 : big kobold / ogre
: else
KMONS:   3 : troll
: end
: end
SUBST:   t = T
KMASK:   T = no_monster_gen
MAP
...T....ccc.
............
...xxxxxxxx.
..xxxxt't>x.
.xxxxx''''x.
.G.x$X'C''x.
...+0x''''x.
...+0x''''x.
.G.x$X'D''x.
.xxxxx''''x.
..xxxxt't>x.
  .xxxxxxxx
ENDMAP

###########################################################
# Basic island, with variations
NAME:   enne_entry_octagon_isle
ORIENT: float
TAGS:   entry no_monster_gen
FTILE:  '{ = floor_sand
SUBST:  ' = .
{{
    octa_room({
        oblique = crawl.random_range(3,7),
        replace = '.',
        outside = 'W',
        inside  = '.'
    })
    if crawl.coinflip() then
        smear_map({iterations=20, smear='x', onto='.W', boxy=true})
    end
}}
SUBST: W:xw
MAP
 xxxxxxxxxxxxx
x.............x
x.............x
x.............x
x.............x
......www......
.....w'''w.....
@....w'{'w....@
.....w'''w.....
......www......
x.............x
x.............x
x.............x
x.............x
 xxxxxxxxxxxxx
ENDMAP

#######################################################################
# Four elements.
# Pretty hazardous, but the Earth side is always safe to leave through.
# Players can safely watch at the clouds. All exits are runed except for
# the safe one.
# This vault is great. I've seen players marvel at it. If need be, we
# may delegate it to another branch, where less caution measures are
# demanded. But I'd like to keep it on D:1 (dp).
# Edited: translucent walls are less fun, but perfectly safe.
NAME:    shiori_entry_elements
TAGS:    entry no_monster_gen no_item_gen no_rtele_into
ORIENT:  float
MARKER:  A = lua:fog_machine { \
             pow_max = 10, delay_min = 50, delay_max = 300, \
             size = 8, start_clouds = 1, \
             cloud_type = "noxious fumes" }
SUBST:   A = a ,  a = a m:1
FTILE:   a = floor_slime
COLOUR:  a = lightgreen
SUBST:   a = .
MARKER:  W = lua:fog_machine{\
             pow_max = 10, delay_min = 50, delay_max = 300, \
             size = 8, start_clouds = 1, \
             cloud_type = "freezing vapour"}
SUBST:   W = w
SUBST:   w : Ww'" , ' = wwW"
COLOUR:  " = blue
SUBST:   " = .
SUBST:   _ = w
MARKER:  F = lua:fog_machine {\
             pow_max = 10, delay_min = 50, delay_max = 300, \
             size = 8, start_clouds = 1, \
             cloud_type = "flame"}
SUBST:   F = f
SUBST:   f : fflF , f = llf , F = f
FTILE:   f = floor_rough_red
COLOUR:  f = red
SUBST:   f = .
MARKER:  E = lua:fog_machine{\
             pow_max = 20, delay_min = 50, delay_max = 300, \
             size = 12, start_clouds = 1, \
             cloud_type = "black smoke"}
SUBST:   E = e , e = e n:1
FTILE:   e = floor_mud
COLOUR:  e = brown
SUBST:   e =.
SUBST:   = = m
SUBST:   X : c.
MAP
          ...
       ccc===ccc
      cc..aaa..cc
      c.aaaAaaa.c
      c..aaaaa..c
      cc...a...cc
  cccccccnn=nnccccccc
 cc..ccccc...ccccc..cc
 c.w..ccccc+ccccc..f.c
 c.ww.nccX...Xccn.ff.c
.=www.n_c.....cln.fff=.
.=wWww=.+..{..+.=ffFf=.
.=www.n_c.....cln.fff=.
 c.ww.nccX...Xccn.ff.c
 c.w..ccccc+ccccc..f.c
 cc..cccccG.Gccccc..cc
  cccccccnn+nnccccccc
      cc...e...cc
      c..eeeee..c
      c.eeeEeee.c
      cc..eee..cc
       ccc+++ccc
ENDMAP

##############################################################################
# Three entry vaults containing the same river.
NAME:    lemuel_entry_river_bridge
TAGS:    entry no_monster_gen
ORIENT:  float
SHUFFLE: {}, XXT
COLOUR:  ' : brown / white
FTILE:   ' = floor_dirt
SUBST:   '=., X=x, T:tttT, T=t x:1
: if crawl.coinflip() then
TAGS:    no_pool_fixup
: end
WEIGHT:  3
MAP
xxxxxxxxxxxxxxxxxxx
xXXXXXXXXXXXXXXXXXx
xXXXX{.......}XXXXx
xXXXX.........XXXXx
xwXXX.........XXXXx
xwwXX.........XXXXx
xwwwX.........XXXXx
xXwwX.........XXXXx
xXwwww........XXXXx
xXXwwwwww'w...XXXXx
xXXXwwwww'wwwwXXXXx
xXXXXwwww'wwwwwwXXx
xXXXX...w'wwwwwwwXx
xXXXX........wwwwXx
xXXXX.........Xwwwx
xXXXX.........XXwwx
xXXXX.........XXXwx
xxxxx.........xxxxx
xxxxx....@....xxxxx
ENDMAP

NAME:    lemuel_entry_river_ford
TAGS:    entry no_monster_gen
ORIENT:  float
WEIGHT:  6
SHUFFLE: {}, XYZ
SUBST:   X=W, Y=w, Z=w
: if crawl.random2(3) > 0 then
SUBST:   T=x, "=., '=.
: else
SUBST:   "=T.., '=T...., T:Tttt, T=t x:1
: end
MAP
xxxxxxxxxxxxxxxxxxx
xTTTTTTTTTTTTTTTTTx
xTTTT{"""""""}TTTTx
xTTTT"."..."."TTTTx
xwTTT"'.''..."TTTTx
xwwTT".'""".'"TTTTx
xwwwT.''"""'."TTTTx
xTwwX".'.''.'"TTTTx
xTwwXw..'..''"TTTTx
xTTXwwwwwww.."TTTTx
xTTTXwwwwYYwwZTTTTx
xTTTTXwwYwwwwwZwTTx
xTTTT'..wwwwwZwwwTx
xTTTT''..''..wwwwTx
xTTTT''.''.'''Twwwx
xTTTT'.'.''.''TTwwx
xTTTT.........TTTwx
xxxxx.........xxxxx
xxxxx....@....xxxxx
ENDMAP

NAME:    lemuel_entry_river_passageway
TAGS:    entry no_monster_gen
ORIENT:  float
SHUFFLE: {}, ABC
SUBST:   A:+, B:x, C:x
WEIGHT:  1
MAP
xxxxxxxxxxxxxxxxxxx
xxxWA{.......}xxxxx
xxwWx.........xxxxx
xwwWB.........xxxxx
xwwWx.........xxxxx
xwwWC.........xxxxx
xxWwx.........xxxxx
xxWwwwww......xxxxx
xWxwwwwwwwwww.xxxxx
xWxxwwwwwwwwwwxxxxx
xxWxxwwwwwwwwwwwxxx
xxWxx.wwwwwwwwwwwxx
xxwWx......wwwwwwxx
xwxw+.........xwwwx
xwxxx.........xxwwx
xxxxx.........xxxwx
xxxxx.........xxxxx
xxxxx.........xxxxx
ENDMAP

##############################################################################
NAME:    dpeg_entry_caged_fury
TAGS:    entry no_rotate
MONS:    w:30 nothing / giant cockroach / w:2 worm
MONS:    w:30 nothing / ooze
MONS:    w:20 nothing / jackal / rat
MONS:    w:30 nothing / ooze / w:2 jelly / giant cockroach / w:2 worm / \
         w:5 jackal / w:5 rat
ORIENT:  float
FTILE:   1234ABCDEabcdem = floor_dirt
SHUFFLE: abcde / fghij
SUBST:   f=A, g=B, h=C, i=D, j=E
SUBST:   abcde = mx
SUBST:   ABCDE : mx
SHUFFLE: xc, 123
KMASK:   T = no_monster_gen
MAP
.................
.xxxxxxxxxxxxxxx.
.x4441321331444x.
.x4312132211324x.
.x4123213123134x.
.xABCDEm=medcbax.
.x.............x.
.+T....xxx....T+.
.x......{......x.
.x..T...]...T..x.
.xxx+xxxxxxx+xxx.
.................
ENDMAP

##############################################################################
NAME:    dpeg_entry_pits
TAGS:    entry no_monster_gen no_rotate no_pool_fixup
WEIGHT:  20
ORIENT:  float
: if crawl.one_chance_in(4) then
SUBST:   Yy=w, Zz=l, Xx"'=b
NSUBST:  U = 1:} / *:{
: elseif crawl.one_chance_in(3) then
SUBST:   U=., Yy=w, Zz=l
SHUFFLE: x_/'"
SUBST:   x=+, '=b, ":".b
NSUBST:  X = 1:} / *:{
: elseif crawl.one_chance_in(2) then
SUBST:   U=., Zz=l, Xx"'=b
NSUBST:  Y = 1:} / *:{, y = 1:. / *:w
: else
SUBST:   U=., Yy=w, Xx"'=b
NSUBST:  Z = 1:} / *:{, z = 1:. / *:l
: end
SHUFFLE: bxxx
MAP
 .......    .......
..wwww...  ...llll..
.wywwyw......lzllzl.
.wwYYww..UU..llZZll.
.wywwyw......lzllzl.
..wwww..b'bb..llll..
 ......bx"bxb......
      .'"XX"'.
      .bx"bxb.
      ..b'bb..
       ......
ENDMAP

###############################################################################

NAME: nicolae_entry_kraken_aquarium_a
TAGS: entry no_monster_gen no_pool_fixup no_trap_gen no_item_gen generate_awake
ORIENT: float
WEIGHT: 1
KMONS: K = kraken att:neutral
KFEAT: K = w
NSUBST: ' = 12:! / *:'
KMONS: ! = human / elf / orc; nothing / naga; nothing / centaur; nothing / \
           draconian; nothing / ogre; nothing / minotaur / troll / kobold / \
           mummy / ghoul / spriggan; nothing / dwarf; nothing / felid / \
           octopode; nothing / vampire spells:.
KPROP: Kw'! = no_rtele_into
KFEAT: ' = .
MAP
  .......
 .........
..nnnnnnn..
..n'''''n..
..n'www'n..
..n'wKw'n.{
..n'www'n..
..n'''''n..
..nnnnnnn..
 .........
  .......
ENDMAP

###############################################################################

NAME: nicolae_entry_kraken_aquarium_b
TAGS: entry no_monster_gen no_pool_fixup no_trap_gen no_item_gen
ORIENT: float
WEIGHT: 1
KMONS: K = kraken att:neutral
KFEAT: K = w
NSUBST: ' = 15:! / *:'
KMONS: ! = human / elf / orc; nothing / naga; nothing / centaur; nothing / \
           draconian; nothing / ogre; nothing / minotaur / troll / kobold / \
           mummy / ghoul / spriggan; nothing / dwarf; nothing / felid / \
           octopode; nothing / vampire spells:.
KPROP: Kw'! = no_rtele_into
KFEAT: ' = .
MAP
.........
.nnnnnnn.
.n'''''n.xxxxx
.n'www'n.x...x
.n'www'n+x...x
.n'wKw'n+..{.x
.n'www'n+x...x
.n'www'n.x...x
.n'''''n.xxxxx
.nnnnnnn.
.........
ENDMAP

###############################################################################
# Three runes > orb of zot > upstairs
NAME:   nicolae_entry_your_instructions
TAGS:   entry no_monster_gen no_trap_gen no_item_gen
WEIGHT: 1
ORIENT: float
SHUFFLE: [(
SHUFFLE: ABCDEFHIJKLMNOPQR
KITEM:  A = gossamer rune of zot mimic
KITEM:  B = decaying rune of zot mimic
KITEM:  C = serpentine rune of zot mimic
KITEM:  D = barnacled rune of zot mimic
KITEM:  E = slimy rune of zot mimic
KITEM:  F = silver rune of zot mimic
KITEM:  H = abyssal rune of zot mimic
KITEM:  I = demonic rune of zot mimic
KITEM:  J = glowing rune of zot mimic
KITEM:  K = magical rune of zot mimic
KITEM:  L = fiery rune of zot mimic
KITEM:  M = dark rune of zot mimic
KITEM:  N = iron rune of zot mimic
KITEM:  O = icy rune of zot mimic
KITEM:  P = obsidian rune of zot mimic
KITEM:  Q = bone rune of zot mimic
KITEM:  R = golden rune of zot mimic
KITEM:  Z = Orb of Zot mimic
KFEAT:  < = escape_hatch_up mimic
KPROP:  ->ABCDEFHIJKLMNOPQRZ = no_rtele_into
SUBST:  - = .
MAP
xxxxxxxxxxxxxxxxxx
x................x
x...cccccccccc...xxxxxxxxx
x...c---C----n...........@
x.{.c>-Z<B---n.[.........@
x...c---A----n...........@
x...cccccccccc...xxxxxxxxx
x................x
xxxxxxxxxxxxxxxxxx
ENDMAP

###############################################################################

NAME:    nagdon_entry_double_spiral
TAGS:    entry no_monster_gen no_trap_gen no_pool_fixup
ORIENT:  float
MONS:    plant, toadstool
: if crawl.coinflip() then
SUBST:   G : G:20 H:20 T:5 V:5 1:5 2:5 t:5 A:1 B:1 C:1
SUBST:   c : c:40 x:35 v:15 b:10
: elseif crawl.coinflip() then
KFEAT:   3456 : W
SUBST:   . = W
SUBST:   ' = W.
SUBST:   G : 2:15 G:10 H:5 1:5 A:1 B:1 C:1
SUBST:   c : M:60 x:30 c:10
: else
:   if crawl.one_chance_in(4) then
SUBST:   . = W
SUBST:   ' = WW.
:   elseif crawl.one_chance_in(6) then
SUBST:   c = l
:   end
SUBST:   c : t:45 m:30 w:20 n:5
SUBST:   G : G:40 H:30 2:10 1:5 A:3 B:2
: end
KFEAT:   A = abandoned_shop
KFEAT:   B = stone_arch
NSUBST:  C = AB / c
KFEAT:   M = mangrove
SUBST:   H : G:60 T:5
SUBST:   '" = .
MAP
       ccc
    ccccGcccc
   cc.......cc
  cc.ccccccc.cc
 cc.cc.....cc.cc
 c.cc.ccccc.cc.c
 c.c.cc...cc.c.c
cc.c.c.cc.Gc.c.cc
cG.c.c.cG.cc.c.Gc
cc.c.c.cc....c.cc
 c.c.cc.ccccGc.c
 c'cc.cc...ccc.c
 cc'cc.cccc...cc
  cc'cc...ccGcc
   cc'ccc.{ccc
    cc@"ccccc
       @@@
ENDMAP

###############################################################################

NAME:    nagdon_entry_zigzag_paths
TAGS:    entry no_trap_gen no_monster_gen
ORIENT:  float
MONS:    plant, toadstool
ITEM:    orc skeleton / kobold skeleton / goblin skeleton / place:D:1 skeleton
: if crawl.one_chance_in(3) then
  SUBST:   GHIJ = x
  SUBST:   " = .
  SUBST:   & = @
:   if crawl.coinflip() then
    SUBST:   ' = .
    SUBST:   + = +:40 .:30 1:5 2:5
:     if not crawl.one_chance_in(3) then
      SHUFFLE: [({
:     end
:   else
    SUBST:   '(+ = x
:   end
: else
  SUBST:   "['(& = x
  SUBST:   + = H
:   if crawl.coinflip() then
    SUBST:   GIJ = G
    SUBST:   G : x.
    SUBST:   H : xGc
:   else
:     if crawl.coinflip() then
      SUBST:   H = x
      SHUFFLE: GHI
      SUBST:   G = I
      SUBST:   H = x
      SUBST:   I : G:3 1:5 2
      SUBST:   J : x d e A V >:5 2:5 1:1
      SUBST:   e = dx
:     else
:       if crawl.coinflip() then
        SUBST:   H : .:20 + 1:1
        SUBST:   J = H
        SUBST:   GI =  x
:       end
        SUBST:   GIJ : x b:1
        SUBST:   H : G T V:5 1:5 2:1 A:1
:     end
:   end
: end
SUBST:   x : x c:1
: if crawl.one_chance_in(3) then
  SUBST:   G = t
: elseif crawl.one_chance_in(10) then
  SUBST:   x = t
  SUBST:   1 : 2 T
: end
KFEAT:   A = abandoned_shop / stone_arch / known shaft trap / \
         known teleport trap
NSUBST:  A = A / x
SUBST:   X = x
SUBST:   ([ = .
MAP
    XXXXXXXXXXXXXXXXXXXXXXXXXXXX
 XXXXxxxxxxxxxxxxxxxxxxxx"xxxxxx
 Xxxxxxxxxxxxx"xxxxxxxxx"x"xxxxxxx
 Xxxxxx"xxxxx"x"xxxxxxx"Jxx"xxxxxxx
XXxx[x"x"xxx"Jxx"xxxxx"GHIxx"xxxxxx
XXxxx"Jxx"x"GHIxx"xxx"xx.xxxx"xxxxx
XxxxxGHIxx"xx.xxxx"x"xx.x.xxxx"xxx&
Xxxxxx.xxxxx.x.xxxx"xx.xxx.xxxx"x"x
Xxx{x.x.xxx.xxx.xxxxx.xxxxx.xxxx"xx
Xxxx.xxx.x.xxxxx.xxx.xxxxxxx.xxxxx@
XxxGHIxxx.xx'xxxx.x.xxxxXxxxx.xxx.@
XxxxJxx'GHI'x'xxxx.xxxxXXXxxxx.x.xx
Xxxxxx(x'J'xxx'xxG+IxxXX XXxxxx.xxx
XXxxxxxxx'xxxxx'x'JxxXX   XXxxGHIxx
 XXXxxxxxxxxxxxx'xxxxXX    XxxxJxxx
   XXXXxxxxXXXxxxxxxXX     Xxxxxxxx
      XXXXXX XXXXXXXXX     XXxxxxx
ENDMAP

#######################################################################
# The gods give you a sneak preview of the powers you could get by
# following them.
#
# The holy creatures and profane servitors spawned in some subvaults
# can leak halo / umbra through the walls; at this point in the game,
# it really should only be a visual problem more than anything else.
NAME: grunt_entry_enticement
TAGS: entry no_monster_gen no_item_gen no_tele_into
ORIENT: float
SUBVAULT: A : grunt_entry_enticement_altar
SUBVAULT: B : grunt_entry_enticement_altar
SUBVAULT: C : grunt_entry_enticement_altar
SUBVAULT: D : grunt_entry_enticement_altar
MAP
    XX.@.XX
  XXXo...oXXX
 XXAAo...oBBXX
 XAAAo...oBBBX
XXAAAo...oBBBXX
Xooooo...oooooX
......{.(......
@......T......@
......[.<......
Xooooo...oooooX
XXCCCo...oDDDXX
 XCCCo...oDDDX
 XXCCo...oDDXX
  XXXo...oXXX
    XX.@.XX
ENDMAP

NAME: grunt_entry_enticement_ashenzari
TAGS: grunt_entry_enticement_altar unrand
# Deliberately avoiding potions, scrolls, wands, and jewellery here to avoid
# getting a head start on identifying them.
ITEM: unobtainable any weapon cursed good_item ident:all / \
      unobtainable any armour cursed good_item ident:all / \
      unobtainable any book ident:all / \
      unobtainable any misc ident:all
KFEAT: _ = altar_ashenzari
MAP
 d.
d_d
.d.
ENDMAP

NAME: grunt_entry_enticement_cheibriados
TAGS: grunt_entry_enticement_altar unrand
SHUFFLE: 12
ITEM: unobtainable plate armour ego:ponderousness good_item ident:type
MONS: agate snail, goliath beetle
KFEAT: _ = altar_cheibriados
MAP
 ..
._1
.2d
ENDMAP

NAME: grunt_entry_enticement_elyvilon
TAGS: grunt_entry_enticement_altar unrand
MONS: apis att:neutral
# No items - placing healing items here would be too spoilery.
COLOUR: .1 = blue
FTILE: ._1 = floor_marble
KFEAT: _ = altar_elyvilon
MAP
 ..
._.
..1
ENDMAP

NAME: grunt_entry_enticement_fedhas
TAGS: grunt_entry_enticement_altar unrand
# No oklobs - they exclude through the glass.
MONS: plant / fungus, wandering mushroom
COLOUR: .12d = green
FTILE: _.12d = floor_grass
ITEM: unobtainable choko / unobtainable lychee / unobtainable rambutan / \
      unobtainable orange / unobtainable lemon / unobtainable banana / \
      unobtainable apple / unobtainable apricot / unobtainable pear / \
      unobtainable snozzcumber / unobtainable grape / unobtainable sultana / \
      unobtainable strawberry
KFEAT: _ = altar_fedhas
MAP
 12
1_d
2dd
ENDMAP

NAME: grunt_entry_enticement_kikubaaqudgha
TAGS: grunt_entry_enticement_altar unrand
MONS: necromancer, place:D:$ zombie
COLOUR: ' = brown
FTILE: '_ = floor_pebble_yellow
KFEAT: _ = altar_kikubaaqudgha
MAP
 22
2_2
221
ENDMAP

NAME: grunt_entry_enticement_makhleb
TAGS: grunt_entry_enticement_altar unrand
KPROP: .K12 = bloody / nothing
MONS: executioner / balrug / green death / cacodemon / blizzard demon
MONS: orange demon / ynoxinul / neqoxec / hellwing / smoke demon
MARKER: K = lua:fog_machine { cloud_type = "flame", \
                              pow_min = 10, pow_max = 10, delay = 10, \
                              size = 1, spread_rate = 0, \
                              walk_dist = 0, excl_rad = 0 }
KFEAT: _ = altar_makhleb
MAP
 K2
K_.
2.1
ENDMAP

NAME: grunt_entry_enticement_nemelex_xobeh
TAGS: grunt_entry_enticement_altar unrand
COLOUR: .defg = random
SHUFFLE: defg
ITEM: unobtainable legendary deck of destruction ident:all
ITEM: unobtainable legendary deck of dungeons ident:all
ITEM: unobtainable legendary deck of escape ident:all
ITEM: unobtainable legendary deck of summonings ident:all
ITEM: unobtainable legendary deck of wonders ident:all
KFEAT: _ = altar_nemelex_xobeh
MAP
 dU
e_f
Ugh
ENDMAP

NAME: grunt_entry_enticement_okawaru
TAGS: grunt_entry_enticement_altar unrand
COLOUR: . = cyan
SHUFFLE: defghij
ITEM: unobtainable triple sword good_item
ITEM: unobtainable executioner's axe good_item
ITEM: unobtainable bardiche good_item
ITEM: unobtainable great mace good_item
ITEM: unobtainable lajatang good_item
ITEM: unobtainable crystal plate armour good_item
ITEM: unobtainable large shield good_item
FTILE: defghij_ = floor_black_cobalt
KFEAT: _ = altar_okawaru
MAP
 de
f_g
hij
ENDMAP

NAME: grunt_entry_enticement_sif_muna
TAGS: grunt_entry_enticement_altar unrand
ITEM: unobtainable any book
COLOUR: d = blue
FTILE: _d = floor_hall
KFEAT: _ = altar_sif_muna
MAP
 dd
d_d
ddd
ENDMAP

NAME: grunt_entry_enticement_trog
TAGS: grunt_entry_enticement_altar unrand
SHUFFLE: de
KITEM: d = unobtainable executioner's axe ego:anti-magic good_item ident:type
KITEM: e = unobtainable battleaxe ego:anti-magic good_item ident:type
MONS: orc warrior perm_ench:berserk / human hd:6 perm_ench:berserk / \
      troll perm_ench:berserk / ogre perm_ench:berserk
KPROP: .de12 = bloody / nothing
KFEAT: _ = altar_trog
MAP
 d1
e_.
1..
ENDMAP

NAME: grunt_entry_enticement_tso
TAGS: grunt_entry_enticement_altar unrand
SHUFFLE: de
KITEM: d = unobtainable long sword ego:holy_wrath ident:type / \
           unobtainable scimitar ego:holy_wrath ident:type
KITEM: e = unobtainable shield / unobtainable large shield
MONS: paladin, angel
COLOUR: ._de12 = yellow
FTILE: ._de12 = floor_limestone
KFEAT: _ = altar_the_shining_one
MAP
 .d
._2
e21
ENDMAP

NAME: grunt_entry_enticement_vehumet
TAGS: grunt_entry_enticement_altar unrand
MONS: deep elf annihilator, draconian annihilator
SHUFFLE: de, 12, KL
KFEAT: _ = altar_vehumet
MARKER: K = lua:fog_machine { cloud_type = "flame", \
                              pow_min = 10, pow_max = 10, delay = 10, \
                              size = 1, spread_rate = 0, \
                              walk_dist = 0, excl_rad = 0 }
MARKER: L = lua:fog_machine { cloud_type = "freezing vapour", \
                              pow_min = 10, pow_max = 10, delay = 10, \
                              size = 1, spread_rate = 0, \
                              walk_dist = 0, excl_rad = 0 }
MAP
 K.
L_1
.2.
ENDMAP

NAME: grunt_entry_enticement_xom
TAGS: grunt_entry_enticement_altar unrand
NSUBST: d = 3:1 / *:d
COLOUR: ._d1 = random
MONS: butterfly
ITEM: unobtainable any mimic
KFEAT: _ = altar_xom
MARKER: _ = lua:fog_machine { cloud_type = "seething chaos", \
                              pow_min = 30, pow_max = 50, delay = 100, \
                              size = 1, spread_rate = 70, \
                              walk_dist = 1, excl_rad = 0 }
MAP
 dd
d_d
ddd
ENDMAP

NAME: grunt_entry_enticement_yredelmnul
TAGS: grunt_entry_enticement_altar unrand
MONS: deep dwarf death knight
MONS: profane servitor / bone dragon / ghoul / death cob / skeletal warrior
KFEAT: _ = altar_yredelemnul
MAP
 22
2_2
221
ENDMAP

NAME: grunt_entry_enticement_zin
TAGS: grunt_entry_enticement_altar unrand
MONS: daeva
KITEM: $ = unobtainable gold
COLOUR: . = white
FTILE: ._1$ = floor_limestone
KFEAT: _ = altar_zin
MAP
 $.
$_1
.1.
ENDMAP
