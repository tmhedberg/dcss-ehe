###
## Maps from named Wizards, unrand and fixedarts
#
#Wizard    |Threat                  |Loot                    |XP
#--------------------------------------------------------------------
#Tukima    |6 dancing weapons,      |weapons, book,          |14400
#          |weapon generators       |acquirement             |
#--------------------------------------------------------------------
#Eringya   |centaurs, fauns,        |books, staves, potions  |19000
#          |plants, golems          |                        |
#--------------------------------------------------------------------
#Doroklohe |golems or demons        |scrolls or armour       |12000
#          |or top-tier undead      |or random               |
#--------------------------------------------------------------------
#Wucad Mu  |sudden "monks",         |potions of experience,  |9000
#          |summoning OCS           |staff of Wucad Mu       |
#--------------------------------------------------------------------
#Cigotuvi  |uglies, lumps,          |tmut potions / books,   |16000
#          |abominations            |scrolls of summoning    |
#--------------------------------------------------------------------
#Iskenderun|DE mages, iood statues, |books, books, books,    |22000
#          |purple draconians       |robe of the archmagi    |
#--------------------------------------------------------------------
#Zonguldrok|skeletal warriors,      |consumables, gold,      |20000++
#          |zombies, ancient lich   |Zonguldrok's sword      |
#--------------------------------------------------------------------
#Golubria  |tloc-themed monsters,   |tloc items, cloaks,     |20000
#          |Abyss monsters          |abyss-escape aides      |
#--------------------------------------------------------------------
#Cloud Mage|air elementals,         |potions, robe of clouds,|16000
#          |vapours, cloud mage     |speed/air-related misc  |
#--------------------------------------------------------------------
#Hellbinder|Demons, summoners,      |fire/summoning/         |17000
#          |Hellbinder              |demonic items           |
#---------------------------------------------------------------------
#Full Name                |Layout               |Colours
#---------------------------------------------------------------
#Tukima's Dance Hall      |mirrored hall        |lightgray/white
#---------------------------------------------------------------
#Eringya's Formal Garden  |overgrown formal     |green and brown
#                         |French garden        |
#---------------------------------------------------------------
#Doroklohe's Tomb         |densely packed       |yellow walls,
#                         |collapsing tombs     |dark floor
#---------------------------------------------------------------
#Wucad Mu's Monastery     |empty temple         |dark walls,
#                         |                     |autumn trees
#---------------------------------------------------------------
#Cigotuvi's Fleshworks    |organic, irregular,  |magenta/red/yellow
#                         |twisted innards      |flesh/blood tiles
#---------------------------------------------------------------
#Iskenderun's Mystic Tower|fortress tower with  |tons of magenta
#                         |statues, cave corners|
#---------------------------------------------------------------
#Zonguldrok's Mausoleum   |tower, graveyard     |piles of darkgray
#---------------------------------------------------------------
#Roulette of Golubria     |old-abyss mess,      |mostly green,
#                         |teleport chambers maw|rare white or cyan
#---------------------------------------------------------------
#Cloud Mage's Chambers    |"cloud-esque"        |lightgray, white,
#                         |                     |lightblue
#---------------------------------------------------------------
#Hellbinder's Lair        |triangles and circles|red, darkgray,
#                         |sigils               |yellow sigils
##
#
# TO-DO:
#
# Actual portals need quite a bit of editing, and some unique tiles.
# Tiles to fix: Tukima's fountains, Eringya's rock-like stone walls,
# Doroklohe's plain floor, Cigotuvi's doorways, less generic
# Iskenderun tiles, Cloud Mage's "white fluffiness" and "sea of clouds".
#
##

{{
function wizlab_portal (e)
    local timeout_turns_long = crawl.random_range(2700, 3300)
    local timeout_turns_short = timeout_turns_long/10
    local messager =
      timed_msg {
           initmsg = { "You hear the crackle of arcane power.",
                       "There is an entrance to a wizard's laboratory on"
                       .. " this level! Hurry and find it before the "
                       .. "portal closes forever!" },
        finalmsg = "The crackle of the magical portal is almost imperceptible now.",

        verb = 'crackle',
        noisemaker = 'magical portal',
        ranges = {
          { 5000, 'rapid ' },  { 4000, '' },
          { 2500, 'slow ' }, { 1500, 'irregular ' },
          { 0, 'erratic ' }
        }
    }

    e.lua_marker('O',
      timed_marker {
        disappear = "The flow of magic halts.",
        desc = "magical portal",
        entity = 'portal',
        dst = 'WizLab',
        overview = "magical portal",
        turns = timeout_turns_long,
        turns_short = timeout_turns_short,
        floor = "stone_arch",
        feat_tile = "dngn_portal_bazaar_gone",
        msg = messager })
    e.kfeat("O = enter_portal_vault")
    e.tile("O = no_random dngn_portal_wizard_lab")
    e.tags("uniq_wizlab no_item_gen no_monster_gen chance_wizlab")
    e.chance("500")
end

-- Destinations:
function wizlab_setup (e, wizlab_desc)
    e.orient("encompass")
    e.tags("no_item_gen no_monster_gen")
    e.kfeat("< = exit_portal_vault")
    e.tile("< = no_random dngn_portal_wizard_lab")
    -- This is so that the note shows up properly.
    e.set_feature_name("exit_portal_vault", "portal leading out of here")
end

function wizlab_milestone (e, wizlab_desc)
    crawl.mark_milestone("br.enter", "entered " .. wizlab_desc .. ".", "parent")
end

function tukima_machine (data, triggerable, triggerer, marker, ev)
  if triggerer.type ~= "turn" or triggerer.sub_type ~= "countdown" then
    return
  end

  local x, y = marker:pos()
  local you_x, you_y = you.pos()

  if data.weapon_count >= 5 then
    if you.see_cell(x, y) then
      crawl.mpr("The machine makes a dull noise.")
    else
      crawl.mpr("You hear a distant, dull noise.")
    end
    return
  end

  if (you_x == x and you_y == y) then return end
  if dgn.mons_at(x, y) then return end

  dgn.apply_area_cloud(x, y, 1, 6, 1, 10, "black smoke", "other", -1)

  if (not dgn.create_monster(x, y, "generate_awake dancing weapon")) then
    return
  end

  data.weapon_count = data.weapon_count + 1

  if you.see_cell(x, y) then
    crawl.mpr("The machine hisses, and spits out a dancing weapon!")
  else
    crawl.mpr("You hear a distant hissing noise.")
  end
end

function wizlab_eringya_grow(data, triggerable, triggerer, marker, ev)
  if triggerer.type ~= "turn" or triggerer.sub_type ~= "countdown" then
    return
  end

  local count = 0

  if data.nofruitsyet and crawl.one_chance_in(5) then
    -- Fruit! Only once, though: infinite fruit is abusable.
    for spot in iter.adjacent_iterator() do
      if not feat.is_solid(spot:xy()) and feat.has_solid_floor(spot:xy())
         and crawl.one_chance_in(3) then
        dgn.create_item(spot.x, spot.y, "pear / apple / choko / apricot / orange"
                          .. "/ banana / strawberry q:4 / lemon / rambutan "
                          .. "/ grape q:7 / sultana q:9 / lychee")
        count = count + 1
        data.nofruitsyet = false
      end
    end
    if count > 0 then
      crawl.mpr("Fruit sprouts up around you!")
    end
  else
    for spot in iter.adjacent_iterator() do
      if not feat.is_solid(spot:xy()) and feat.has_solid_floor(spot:xy())
         and not crawl.one_chance_in(3) then
        if crawl.one_chance_in(9) then
          dgn.create_monster(spot.x, spot.y, "wandering mushroom")
          count = count + 1
        else
          dgn.create_monster(spot.x, spot.y, "toadstool")
          count = count + 1
        end
      end
    end
    if count > 0 then
      crawl.mpr("Mushrooms sprout up around you!")
    end
  end
end

function wizlab_doroklohe_convert_boxes(data, triggerable, triggerer,
                                        marker, ev)
  if triggerer.type ~= "turn" or triggerer.sub_type ~= "countdown" then
    return
  end

  if data.phase == 1 then
    data.phase = data.phase + 1
    if you.silenced() then
      crawl.mpr("The ground shakes.", "warning")
    else
      crawl.mpr("There is a faint hissing noise.", "warning")
    end
    return
  elseif data.phase == 2 then
    data.phase = data.phase + 1
    if you.silenced() then
      crawl.mpr("The ground shakes.", "warning")
    else
      crawl.mpr("There is a loud grinding noise.", "warning")
    end
    return
  elseif data.phase == 3 then
    data.phase = data.phase + 1
    crawl.mpr("The walls fall away. The entombed are set free!", "warning")
    for _, i in ipairs(dgn.find_marker_positions_by_prop("wall_drop", 1)) do
      dgn.terrain_changed(i.x, i.y, "floor", false, false, false)
      dgn.place_cloud(i.x, i.y, "black smoke", 2)
    end
    return
  else
    return
  end
end

local function spawn_zombie (x, y, spec)
    dgn.terrain_changed(x, y, "floor", false, false, false)
    local mons = dgn.create_monster(x, y, spec)
    mons.set_prop("zonguldrok", 1)
    return mons
end

function wizlab_zonguldrok_spawn_zombies(data, triggerable, triggerer,
                                         marker, ev)
    -- Save compat bit.
    if data.count == nil then
        data.count = 0; data.swcount = 0; data.vpcount = 0; data.account = 0
    end
    if triggerer.type ~= "turn" or triggerer.sub_type ~= "countdown" then
        return
    end
    local graves = dgn.find_markers_by_prop("grave", 1)
    local x, y
    for _, gmarker in ipairs(graves) do
        x, y = gmarker:pos()
        if (you.see_cell(x, y) and crawl.one_chance_in(3)) or
            crawl.one_chance_in(8) then
            if data.count < 9 or data.count < 18 and crawl.one_chance_in(5) then
                if crawl.coinflip() then
                    spawn_zombie(x, y, "generate_awake ogre zombie")
                else
                    spawn_zombie(x, y, "generate_awake wight")
                end
            elseif data.count < 21 or data.count < 26 and crawl.one_chance_in(4) then
                if data.vpcount > 3 or crawl.coinflip() then
                    spawn_zombie(x, y, "generate_awake troll zombie")
                else
                    spawn_zombie(x, y, "generate_awake vampire")
                    data.vpcount = data.vpcount + 1
                end
            elseif data.count < 28 or data.account > 2 or crawl.one_chance_in(4) then
                if data.swcount > 5 or crawl.coinflip() then
                    spawn_zombie(x, y, "generate_awake hill giant zombie")
                else
                    spawn_zombie(x, y, "generate_awake skeletal warrior")
                data.swcount = data.swcount + 1
                end
            else
                spawn_zombie(x, y, "generate_awake ancient champion")
                data.account = data.account + 1
            end
            data.count = data.count + 1
            gmarker:remove()
        end
    end
end

function wizlab_zonguldrok_killed_zombie(data, triggerable, triggerer,
                                         marker, ev)
    if data.door_appeared then
        return
    end

    local mons = dgn.mons_from_mid(ev:arg1())
    if not mons.has_prop("zonguldrok") then
        return
    end

    data.number_killed = data.number_killed + 1
    if (#dgn.find_markers_by_prop("grave", 1)) * 2 < data.number_killed * 3
       and #dgn.find_markers_by_prop("grave", 1) < 10 then
        local x, y = marker:pos()
        dgn.tile_feat_changed(x, y, nil)
        dgn.terrain_changed(x, y, "closed_door", false, false, false)
        data.door_appeared = true
        if you.see_cell(x, y) then
            crawl.mpr("A door appears!")
        else
            crawl.mpr("The walls vibrate.")
        end
        local gxm, gym = dgn.max_bounds()
        for p in iter.rect_iterator(dgn.point(1, 1), dgn.point(gxm-1, gym-1)) do
            if dgn.fprop_at(p.x, p.y, "no_rtele_into") then
               dgn.fprop_changed(p.x, p.y, "no_rtele_into")
            end
        end
    end
end


function wizlab_zonguldrok_awaken_wizard(data, triggerable,
                                         triggerer, marker, ev)
    if data.awoke == true then
        return
    end

    local pos = dgn.find_marker_positions_by_prop("wizard_grave", 1)[1]
    local lich = dgn.create_monster(pos.x, pos.y, "generate_awake ancient lich "
                 .."col:brown name:antique_lich name_replace name_descriptor"
                 .." tile:mons_zonguldrok_lich")
    if lich then
        data.awoke = true
    end
end

function wizlab_wucad_msgfn(data, triggerable, triggerer, marker, ev)
  if data.trig == true then
    return
  end

  if crawl.one_chance_in(3) then
    return
  end

  if dgn.persist.wucad_mu_died == true then
    return
  end

  if data.spot == 1 then
    crawl.mpr("Strange, shadowy figures dance through the air in front of you.", "talk_visual")
    data.trig = true
  elseif data.spot == 2 then
    crawl.mpr("This room is filled with shadowy figures, quietly meditating.", "talk_visual")
    data.trig = true
  elseif data.spot == 3 then
    crawl.mpr("Here, spectral monks perform complicated, martial routines; they fade quickly.", "talk_visual")
    data.trig = true
  elseif data.spot == 4 then
    if you.silenced() then
      return
    end
    crawl.mpr("Faint laughter comes from somewhere. Too faint to be real.", "talk_visual")
    data.trig = true
  elseif data.spot == 5 then
    if you.silenced() then
      return
    end
    crawl.mpr("There is a faint scream of pain from a crouched figure. This too fades quickly.", "talk_visual")
    data.trig = true
  elseif data.spot == 6 then
    crawl.mpr("Grey monks gather around the fountain. They do not speak, nor look at each other.", "talk_visual")
    data.trig = true
  elseif data.spot == 7 then
    crawl.mpr("A figure sits in silent meditation. It spots you, gestures wildly, and disappears.", "talk_visual")
    data.trig = true
  end
end

function wizlab_wucad_summon_monks(data, triggerable, triggerer, marker, ev)
  if triggerer.type ~= "turn" or triggerer.sub_type ~= "countdown" then
    return
  end

  if dgn.persist.wucad_mu_died == true then
    return
  end

  -- For now, no spawning during Step From Time; perhaps monks should
  -- continue to appear, just more slowly. If so, the circle_iterator below
  -- needs a different centre from (0,0).
  if you.pos() == 0 then
    return
  end

  local msp = "human name:monk n_suf col:white hd:10 dur:2 sum:shadow_creatures" ..
            " nas:old_memories tile:mons_human_monk seen / deep troll name:monk n_suf"..
            " dur:2 seen sum:shadow_creatures nas:old_memories tile:mons_deep_troll_monk" ..
            " / iron troll name:monk n_suf col:white dur:2 sum:shadow_creatures " ..
            " nas:old_memories seen tile:mons_iron_troll_monk w:5"

  local count = 0
  for point in iter.circle_iterator(3) do
    if crawl.one_chance_in(8) and count < 3 then
      if feat.is_solid(point.x, point.y) or not feat.has_solid_floor(point.x, point.y) then
      else
       local mon = dgn.create_monster(point.x, point.y, msp)
       count = count + 1
      end
    end
  end

  crawl.redraw_view()

  if count == 1 then
    crawl.mpr("One of the shadowy figures appears more solid!", "warning")
  elseif count > 1 then
    crawl.mpr("Shadows coalesce into solid form.", "warning")
  end
end

function callback.wizlab_wucad_wucad_died(data, triggerable,
                                           triggerer, marker, ev)
  dgn.persist.wucad_mu_died = true
  crawl.mpr("The shadows inhabiting this place fade forever.", "talk_visual")
end

function teleporter_golubria_switch_fn(data, triggerable, triggerer, marker, ev)
  local position = dgn.point(marker:pos())
  my_slaves = dgn.find_marker_positions_by_prop("teleport_spot",
                                                data.teleport_spot)

  if you.teleport_to(my_slaves[1].x, my_slaves[1].y, true) then
    crawl.mpr("Your surroundings suddenly seem different!")
  else
    crawl.mpr("There is a strange hissing noise.")
  end
end

}}

default-depth: D:$, Depths, Elf, Crypt, Forest, Vaults:1-4

###############################################################################
# Portal entrances.
#
# Todo: more, and better.
NAME:       mu_enter_wizlab_1
TILE:       m = dngn_transparent_wall_green
COLOUR:     m = lightgreen
:           wizlab_portal(_G)
MAP
    wwwww
   wwwwwww
  wwbmbmbww
 wwbb...bbww
wwbm..O..mbww
 wwbb...bbww
  wwbb+bbww
   www.www
    w.@.w
ENDMAP

NAME:       mu_enter_wizlab_2
SHUFFLE:    tU
TILE:       m = dngn_transparent_wall_green
COLOUR:     m = lightgreen
TILE:       c = wall_stone_gray
:           wizlab_portal(_G)
MAP
.................
.bbbbbbbmbbbbbbb.
.bb...b...b...bb.
.m..U...O...U..m.
.bb...b...b...bb.
.bbbbbbb+bbbbbbb.
..bb...b.b...bb..
..m..t.....t..m..
..bb...b.b...bb..
..bbbbbb+bbbbbb..
.................
......c...c......
.....ccc.ccc.....
.................
ENDMAP

NAME:       mu_enter_wizlab_3
DEPTH:      D:$, Depths, Elf, Crypt, Vaults:1-4
MARKER:     ! = lua:fog_machine { \
                 pow_max = 10, delay_min = 10, delay_max = 40, \
                 size = 2, size_buildup_amnt = 5, \
                 size_buildup_time = 25, cloud_type = "flame" \
             }
MARKER:     ? = lua:fog_machine { \
                 pow_max = 10, delay_min = 10, delay_max = 40, \
                 size = 2, size_buildup_amnt = 5, \
                 size_buildup_time = 25, cloud_type = "freezing vapour" \
             }
COLOUR:     .' = red / blue
KPROP:      '?! = no_rtele_into
SUBST:      ' = .
TILE:       n = dngn_transparent_stone_magenta
COLOUR:     n = lightmagenta
TILE:       c = wall_stone_gray
:           wizlab_portal(_G)
MAP
 ccccccccc
cc''!'?''cc
c?'''''''!c
c''nnnnn''c
c''n...n''c
c''n.O.n''c
c'?n...n!'c
c''nn.nn''c
c''nn.nn''c
cc!n.n.n?cc
 ccnn.nncc
  cc.n.cc
   cc.cc
    c@c
ENDMAP

NAME:       mu_enter_wizlab_4
KFEAT:      ! = floor
COLOUR:     ! = magenta
FTILE:      !O = floor_rough_magenta
:           wizlab_portal(_G)
MAP
    xxxxx
    w!!!x
   ww!O!x
  www!!!x
 www..www
www..www
ww..www
w..www
@.www
@www
ENDMAP

NAME:       mu_enter_wizlab_5
DEPTH:      D:$, Depths, Elf, Crypt, Vaults:1-4
COLOUR:     U = random
COLOUR:     W = mutagenic
KFEAT:      o = granite_statue
FTILE:      WU.Oo = floor_rough_magenta
TILE:       b = dngn_crystal_magenta
:           wizlab_portal(_G)
: set_feature_name("green_crystal_wall", "wall of crystal")
MAP
bbbbbbbbbbb
bbbb...bbbb
bWWU.O.UWWb
bWbb...bbWb
bWWWW.WWWWb
bbbbW.Wbbbb
bbbbW.Wbbbb
bbbbW.Wbbbb
bbbbW.Wbbbb
bbbbo.obbbb
bbbb...bbbb
     @
ENDMAP

NAME:       mu_enter_wizlab_6
SUBST:      x = mc.
TILE:       c = wall_stone_white
TILE:       m = dngn_transparent_stone_magenta
FTILE:      mcx.O = floor_rough_magenta
:           wizlab_portal(_G)
MAP
c.c.ccccccc
x.x.x.x..Oc
.x.x.x.x..c
x.x.x.x.x.c
.x.x.x.x.xc
x.x.x.x.x.c
.x.x.x.x.xc
x.x.x.x.x..
.x.x.x.x.xc
x.x.x.x.x..
.x.x.x.x.xc
ENDMAP

NAME:   mu_enter_wizlab_7
DEPTH:  D:$, Depths, Elf, Crypt, Vaults:1-4
KFEAT:  abcd : floor
KFEAT:  ABCD : rock_wall
TILE:   ABCD = floor_rough_white
TILE:   ABCD = wall_zot_white
COLOUR: Aa : yellow
COLOUR: Bb : green
COLOUR: Cc : blue
COLOUR: Dd : magenta
: wizlab_portal(_G)
MAP
xxxxxxxxxxxxx
x...........@
x.xxxxxxxxxxx
xaAbbbbbbbbax
xaAcBBBBBBAax
xaAcCddddcAax
xaAcCdDDCcAax
xaAcCdOdCcAax
xaAcCDDdCcAax
xaAcddddCcAax
xaABBBBBBcAax
xabbbbbbbbAax
xxxxxxxxxxx.x
@...........x
xxxxxxxxxxxxx
ENDMAP

NAME:     infiniplex_enter_wizlab_glasses
DEPTH:    D:22-, Elf, Crypt, Vaults:1-4
FTILE:    GO_ = floor_rough_magenta
TILE:     m = dngn_transparent_wall_green
COLOUR:   m = lightgreen
COLOUR:   _ = magenta
TILE:     G = dngn_statue_dragon
: wizlab_portal(_G)
MAP
.......
.bmmmb.
.m_O_m.
.mG_Gm.
.m___m.
.bb_bb.
.......
ENDMAP

NAME:     infiniplex_enter_wizlab_water
FTILE:    cnO_ = floor_rough_magenta
TILE:     n = dngn_transparent_stone_magenta
COLOUR:   n = lightmagenta
COLOUR:   _ = magenta
TILE:     c = wall_stone_white
: wizlab_portal(_G)
MAP
ww......ww
ww.wwww.ww
...wwww...
.wwcnncww.
.wwnO_nww.
.wwn__nww.
.wwcnn_ww.
...wwww...
ww.wwww.ww
ww......ww
ENDMAP

NAME:     infiniplex_enter_wizlab_spiral
DEPTH:    D:$, Depths, Elf, Crypt, Vaults:1-4
SUBST:    G : xG.
SUBST:    x : xx.
MARKER:   ! = lua:fog_machine { \
               pow_max = 8, delay_min = 20, delay_max = 60, \
               walk_dist = 3, size = 1, start_clouds = 1, \
               start_clouds = 1, cloud_type = "freezing vapour" \
           }
MARKER:   ? = lua:fog_machine { \
               pow_max = 8, delay_min = 20, delay_max = 60, \
               walk_dist = 3, size = 1, start_clouds = 1, \
               start_clouds = 1, cloud_type = "mutagenic fog" \
           }
FTILE:    _! = floor_frozen
COLOUR:   _! = lightcyan
FTILE:    -? = floor_rough_magenta
COLOUR:   -? = magenta
: wizlab_portal(_G)
MAP
xx...........xx
xG.bbbbbbbbb.Gx
...bw..........
.b.bw.bbbbbbbb.
.b.bw.bllllllb.
.b.bw.bl.....b.
.b.bw..l.bbb.b.
.b.bwwwO--?b.b.
.b.bbb._..-b.b.
.b....._b.?b.b.
.b!__!_!b.-b.b.
.bbbbbbbb.-b.b.
..........?b...
xG.bbbbbbbbb.Gx
xx...........xx
ENDMAP

###############################################################################

default-depth: WizLab

###############################################################################
# And arrivals!
###############################################################################
# Firstly, we have Tukima's Dance Studio.
#
NAME:       wizlab_tukima
TAGS:       no_rotate
MONS:       dancing weapon
KFEAT:      M = granite_statue
TILE:       M = dngn_machine_tukima
MARKER:     M = lua:props_marker {veto_fragmentation="veto", veto_disintegrate="veto", \
                                  veto_shatter="veto", slaved_to="tukima"}
{{

local tukima_marker = TriggerableFunction:new {
    func = "tukima_machine",
    repeated = true,
    data = {weapon_count=0},
}

tukima_marker:add_triggerer(DgnTriggerer:new {
    type="turn", delay_min=600, delay_max=900
})

lua_marker('?', tukima_marker)

}}
SUBST:      ? = .
COLOUR:     +cA< = darkgrey
KMONS:      789 = statue spells:blink_other;.;.;.;.;blink_other \
                  col:silver name:strange_machine n_rpl n_des \
                  hd:13 hp:100 tile:mons_statue_guardian
# please make sure this is the book with Tukima's Dance
KITEM:      8 = book of enchantments
KITEM:      9 = acquire any, scroll of blinking q:4 ident:type
SHUFFLE:    XxLl / HhIi, YyRr / JjKK
SUBST:      XYik = +, xyIK = ., HJRrLl = c, hj = m
TILE:       c = wall_stone_dark
TILE:       V = dngn_dry_fountain_white
LFLOORTILE: floor_pebble_white
COLOUR:     mMV = silver
TILE:       m = dngn_mirror_wall
:           set_feature_name("clear_rock_wall", "crystal clear mirror")
:           set_feature_name("granite_statue", "strange machine")
:           set_feature_name("dry_fountain_blue", "glistening fountain")
:           set_feature_name("stone_wall", "black marble wall")
:           set_feature_name("floor", "marble floor")
:           set_random_mon_list("dancing weapon")
:           wizlab_setup(_G, "Tukima's Studio")
epilogue{{
            wizlab_milestone(_G, "Tukima's Studio")
}}
MAP
            ccccccc
            ccmmmcc
        cccccm...mccccc
       cc.....A.<.....cc
      cc..ccm.....mcc..cc
      cc.ccccm...mcccc.cc
      cc.cccccc7cccccc.cc
     cc...cccc...cccc...cc
     cm...mcm..0..mcm...mc
     cm...mcm.....mcm...mc
     cm...mcm..V..mcm...mc
     cm...mcm.....mcm...mc
     cm...mcm..0..mcm...mc
     cc...cccc...cccc...cc
     ccc.cccccc.cccccc.ccc
      cc.ccccm...mcccc.cc
     ccm7mccm.....mccm7mcc
     cm.0......M......4.mc
    ccXm.mccm..?..mccm.mYcc
  cccxccmlcccm...mcccrmccycc
  ccm.mcccLcccm.mcccRcccm.mcc
 ccm...mLLcccm...mcccRRm...mcc
ccm..$..mcccm.....mcccm..$..mcc
cm..$8$..m+m...7...m+m..$9$..mc
ccm..$..mcccm.....mcccm..$..mcc
 ccm.0.mcc ccm...mcc ccm.0.mcc
  ccmmmcc   ccmmmcc   ccmmmcc
   ccccc     ccccc     ccccc
ENDMAP

###############################################################################
# Eringya's Formal Garden
#
# Map was based on this image:
# https://upload.wikimedia.org/wikipedia/commons/5/58/Plan_du_château_et_des_jardins_de_Clagny_dessiné_par_Maraine_XVIIe_siècle.jpg
#
# TODO: Needs vine-covered statues, rose-covered archway.
#       Map was previously said to be too static: while this is still the case,
#       I think the improvements to terrain and monsters should be more than
#       enough, though more dynamic lua with e.g. oklobs, spores,
#       fruit-renamed dancing weapons could still contribute to the theme.
#
NAME:       wizlab_eringya
TAGS:       no_rotate
MONS:       generate_awake patrolling centaur
MONS:       generate_awake patrolling faun
MONS:       centaur warrior, satyr, thorn hunter
MONS:       stone golem name:vine_covered name_adjective col:lightgreen \
            tile:mons_vine_golem
MONS:       bush
ITEM:       any fixed theme book, any fixed level book
ITEM:       any magical staff / any rod w:2, any potion no_pickup
KFEAT:      - = stone_arch
KFEAT:      _ = altar_fedhas
NSUBST:     1 = 3:2 / * = 1:14 2:1, 3 = 1:4 / * = 3:14 4:1
NSUBST:     P = 1:7 / *:t, A = 1:A / *:-
SUBST:      y = ct
SHUFFLE:    ef / ef / fe
COLOUR:     G = lightgrey
TILE:       G = dngn_statue_centaur
MARKER:     A = feat:stone_arch
TILE:       c = wall_brick_vines
LROCKTILE:  wall_brick_vines
LFLOORTILE: floor_grass
{{
local grow_marker = TriggerableFunction:new { func = "wizlab_eringya_grow",
                                              repeated = true,
                                              data = { nofruitsyet = true } }

grow_marker:add_triggerer(DgnTriggerer:new { type="turn",
        delay_min=500, delay_max=800, })


lua_marker("_", grow_marker)
}}
:           set_border_fill_type("stone_wall")
:           wizlab_setup(_G, "Eringya's Formal Garden")
:           set_feature_name("stone_arch", "rose-covered archway")
:           set_feature_name("granite_statue", "vine-covered statue")
:           set_feature_name("stone_wall", "crumbling stone wall")
:           set_feature_name("floor", "the grass-covered ground")
:           set_random_mon_list ("oklob plant / centaur / centaur warrior")
epilogue{{
            wizlab_milestone(_G, "Eringya's Formal Garden")
}}
MAP
ccccccccccccccccccccccccccccccccccccccccccccc
ctttttttttttttttttttttttttttttttttttttttttttc
ctttttttt...........................ttttttttc
ctttt.....tttttttttttt.tttttttttttt.....ttttc
cttt..tt.tttttttttt.......tttttttttt.tt..tttc
ct.1.tAt............G.<.G............tAt.1.tc
cttt..tt.tttttttttt.......tttttttttt.tt..tttc
ctttt.....tttttttttttt.tttttttttttt.....ttttc
ctttttttt...........................ttttttttc
cttttttttttttttttttttt.tttttttttttttttttttttc
ctttttttttyyyttttttty...ytttttttyyytttttttttc
ctttttttty...yt...ty..T..yt...ty...yttttttttc
cttttttt..1t1..ttt....P....ttt..1t1..tttttttc
ctttttt....t1.t...tc.....ct...t.1t....ttttttc
cttttt.tty...yttttttcc-cctttttty...ytt.tttttc
ctttt.t.ttytyttttttt.....tttttttytytt.t.ttttc
cttt.t.tttt.ttttttty.353.yttttttt.tttt.t.tttc
cttt.t.tttt..tttttttyf.fyttttttt..tttt.t.tttc
ctttt.t.tttt..tttttttytyttttttt..tttt.t.ttttc
cttttt.t.tttt..ttttttttttttttt..tttt.t.tttttc
ctttttt.t.tttt..tttttcccttttt..tttt.t.ttttttc
cttttyyy-yyytt...tttygggyttt...ttyyy-yyyttttc
cttty.1...1.y.tt..ty..1..yt..tt.y.1...1.ytttc
ctty...tTt...y.tt....1T1....tt.y...tTt...yttc
cttty.1.3.1.y.tt..ty..3..yt..tt.y.1.3.1.ytttc
cttttyyy-yyytt...tttygggyttt...ttyyy-yyyttttc
ctttttt.tttttt..tttttcccttttt..tttttt.ttttttc
cttttt.t.tttt..ttttttttttttttt..tttt.t.tttttc
ctttt.t.tttt..ttttt5G._.G5ttttt..tttt.t.ttttc
cttt.t.tttt..ttttt...6.6...ttttt..tttt.t.tttc
cttt.t.ttt..ttttt...........ttttt..ttt.t.tttc
ctttt.t.tytyttttde..cc+cc..edttttytyt.t.ttttc
cttttt.ty...yttttttcc...cctttttty...yt.tttttc
ctttttt.-.1.-.ttttcc..P..cctttt.-.1.-.ttttttc
cttttttty...yt.t..t-.3T3.-t..t.ty...ytttttttc
cttttttttyyyttt.tt.y.....y.tt.tttyyyttttttttc
cttttttttttttttt..ttyytyytt..tttttttttttttttc
ctttttttttttttttttttttttttttttttttttttttttttc
ccccccccccccccccccccccccccccccccccccccccccccc
ENDMAP

###############################################################################
# Doroklohe's Forbidden Tomb
#
# It seems as if he practised box casting. I wonder what that's good for.
# Vault by dpeg. Thanks to Enne for box_glyph and to Jude for triggers.
#
# A bleach sun settles in the smog-stained sky
# Dismembered bodies stray in disarray
# Breakfast is served in the Manchester Morgue
# The beginning of a horrifying day
#                                    Impetigo 1992
#
# TODO: Floor tiles.
NAME:       wizlab_doroklohe
TAGS:       no_rotate
LROCKCOL:   yellow
KFEAT:      ! = x
{{
function make_box(cenx, ceny, gly)
  for ox = -1, 1 do
    for oy = -1, 1 do
      local x = cenx + ox
      local y = ceny + oy
      if (x >= 1 and y >= 1 and x <= width() and y <= height()) then
        if (ox ~= 0 or oy ~= 0) then
          mapgrd[x][y] = gly;
        end
      end
    end
  end
end

function box_glyph(findgly, boxgly)
  local glyphs = {gly_points(findgly)}
  for i = 1, #glyphs, 2 do
    make_box(glyphs[i], glyphs[i+1], boxgly)
  end
end
}}
#           There are two layouts: round and grid.
#           Round has 19 boxes: 12 % and 6 * and 1 |
#           Grid has 21 boxes: b-u and |
#           Layout for grid can be regular or random.
#
:           local layout = crawl.random2(13)
:           if layout < 3 then
#           Preparation for the rare regular grid layout.
SUBST:      bcdefghijk = ., lmnopqrstu = .
SUBST:      B=b, C=c, D=d, E=e, F=f, G=g, H=h, I=i, J=j, K=k
SUBST:      L=l, M=m, N=n, O=o, P=p, Q=q, R=r, S=s, T=t, U=u
:           end
:           if layout > 9 then
#           First the round layout...
COLOUR:     _ = darkgrey
KFEAT:      _ = stone_wall
TILE:       _ = wall_stone_black_marked / wall_stone_dark w:4 / wall_stone_black_marked
SUBST:      bcdefghijk = ., lmnopqrstu = .
SUBST:      BCDEFGHIJK = ., LMNOPQRSTU = .
:           else
#           ...and now the grid layout.
SUBST:      _ = .
SUBST:      *=., %=.
SUBST:      B=b, C=c, D=d, E=e, F=f, G=g, H=h, I=i, J=j, K=k
SUBST:      L=l, M=m, N=n, O=o, P=p, Q=q, R=r, S=s, T=t, U=u
NSUBST:     b = 1:b / *:., c = 1:c / *:.
NSUBST:     d = 1:d / *:., e = 1:e / *:.
NSUBST:     f = 1:f / *:., g = 1:g / *:.
NSUBST:     h = 1:h / *:., i = 1:i / *:.
NSUBST:     j = 1:j / *:., k = 1:k / *:.
NSUBST:     l = 1:l / *:., m = 1:m / *:.
NSUBST:     n = 1:n / *:., o = 1:o / *:.
NSUBST:     p = 1:p / *:., q = 1:q / *:.
NSUBST:     r = 1:r / *:., s = 1:s / *:.
NSUBST:     t = 1:t / *:., u = 1:u / *:.
#           Of the outer boxes, three are damaged.
#           TODO: adapt this code for the first box,
#           instead of manually ruining it.
SHUFFLE:    bcdefghijklm
:           box_glyph('b', 'X')
:           box_glyph('c', 'Y')
:           box_glyph('d', 'Z')
SUBST:      bcd = .
NSUBST:     X = 1=. / *=!:20 .:1
NSUBST:     Y = 1=. / *=!:30 .:1
NSUBST:     Z = 1=. / *=!:50 .:1
#           For the other boxes, prepare same setup as for the
#           round layout (i.e. six *'s)
SHUFFLE:    nqru
SUBST:      efghijklmn = %
SUBST:      opqrstu = *
:           end
#           Monsters
#            0 Tomb set: zombies, mummies (weight *2)
#            1 Demons (if demons are added or reclassified, please change!)
#            2 Golems
#            TODO: 3 Holy set (for later)
:           local mrnd = crawl.random2(4)
:           if mrnd == 0 then
KMONS:      0% = clay golem / earth elemental / toenail golem w:1
KMONS:      * = stone golem / crystal golem / iron golem
KMONS:      | = electric golem
:           set_random_mon_list("clay golem / toenail golem w:1 / " ..
:                               "stone golem / crystal golem / iron golem")
:           elseif mrnd == 1 then
KMONS:      0% = smoke demon / ynoxinul / neqoxec / ice devil /\
                 chaos spawn / soul eater / sun demon
KMONS:      * = lorocyproca / reaper / shadow demon / tormentor / hellion /\
                blizzard demon / green death / balrug / cacodemon
KMONS:      | = hell sentinel / brimstone fiend / shadow fiend /\
                ice fiend / executioner
:           set_random_mon_list(
:               "smoke demon / ynoxinul / neqoxec / ice devil /" ..
:               "chaos spawn / soul eater / sun demon / " ..
:               "lorocyproca / reaper / shadow demon / tormentor / hellion")
:           else
KMONS:      0% = place:Depths:1 zombie / guardian mummy w:4
KMONS:      * = zombie / mummy priest w:6
KMONS:      | = ancient lich / greater mummy
:           set_random_mon_list("place:Depths:1 zombie / zombie / guardian mummy")
:           end
#           Loot.
#           0 = scrolls. 1 = armours. 2 = mixed.
:           local lrnd = crawl.random2(3)
:           if lrnd == 0 then
KITEM:      % = any scroll / any scroll q:2 w:3 / any scroll q:3 w:1
:           kitem("* = " .. dgn.good_scrolls)
KITEM:      | = scroll of acquirement ident:type / scroll of enchant weapon III q:2 ident:type /\
                scroll of blinking q:2 ident:type, scroll of fog q:2 ident:type, \
                scroll of holy word q:2 ident:type
:           elseif lrnd == 1 then
KITEM:      % = any armour
KITEM:      * = any good_item armour
KITEM:      | = cursed robe ego:resistance ident:type / cursed gold dragon armour
:           else
KITEM:      % = any / star_item w:2
KITEM:      * = star_item / superb_item w:2
KITEM:      | = superb_item
:           end
#           Boxification:
:           box_glyph('%', '!')
:           box_glyph('*', '!')
:           box_glyph('|', '!')
#           Intentionally colouring the floor glyphs of the central room only.
#           The squares beneath the boxes are to remain uncoloured.
NSUBST:     x = 1:. / 1 = x. / *:x
COLOUR:     ^ = darkgrey
TILE:       ^ = wall_stone_black_marked / wall_stone_dark w:4 / wall_stone_black_marked
COLOUR:     = = yellow
KFEAT:      ^ = stone_wall
COLOUR:     . = darkgrey / blue w:3 / cyan w:1
MARKER:     ! = lua:portal_desc {wall_drop=1}
MARKER:     = = lua:portal_desc {wall_drop=1}
TILE:       !x = wall_sandstone
{{
local box_marker = TriggerableFunction:new {
    func="wizlab_doroklohe_convert_boxes",
    repeated=true, data={phase=1} }

box_marker:add_triggerer(DgnTriggerer:new { type="turn",
    delay_min=500, delay_max=1000})

lua_marker("A", box_marker)
}}
:           set_feature_name("rock_wall", "strange rock wall")
:           set_feature_name("stone_wall", "highly decorated stone wall")
:           set_feature_name("floor", "rough-hewn floor")
:           wizlab_setup(_G, "Doroklohe's Tomb")
epilogue{{
            wizlab_milestone(_G, "Doroklohe's Tomb")
}}
MAP
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^________________...........________________^
^____________...................____________^
^_________........................._________^
^_______b....cc......d%d......ee....f_______^
^_____bB.....cC%.....dDd.....%Ee.....Ff_____^
^____bb...............................ff____^
^___.....................................___^
^__........%......o*.....*p......%........__^
^__.......nnN....oO.......Pp....Qqq.......__^
^_........................................._^
^_...mm...............................gg..._^
^_...mM..%......*.....|.....*......%..Gg..._^
^_...mm...............................gg..._^
^_........................................._^
^__.......uuU....tT.......Ss....Rrr.......__^
^__........%......t*.....*s......%........__^
^___.....................................___^
^____ll...............................hh____^
^_____lL.....kK%.....xxx.....%Ii.....Hh_____^
^_______l....kk......x0x......ii....h_______^
^_________...........xxx..........._________^
^____________...................____________^
^________________...........________________^
^^^^^^^^^^^^^^^^^^^^^^#^^^^^^^^^^^^^^^^^^^^^^
                ^____...____^
                ^__.......__^
                ^_...!+!..._^
                ^_.<.+A+.<._^
                ^_...!+!..._^
                ^__.......__^
                ^____...____^
                ^^^^^^^^^^^^^
ENDMAP

##############################################################################
# Cigotuvi's Fleshworks (by Mu.)
#
# Cigotuvi has mastered the art of manipulating flesh, and his lab is a
# living testament to this fact, seeming like the interior of some
# ghastly beast. The walls and floor are slick and membranous, pulsing to an
# unheard heartbeat and oozing thick, green ichor from every inch.
#
# The bulk of Cigotuvi's Fleshworks is devoted to cells that house test
# subjects in various stages of degeneration. Most are sickly humanoids; the
# others are ugly things, pulsating lumps and abominations.
#
# The central, circular chamber houses Cigotuvi's flesh golem.
# The Eastern half of his lab is dominated by a snaking passageway filled with
# pulsating lumps and the occasional ugly thing.
#
# The western half of his lab is full of abominations, including the terrible
# "Cigotuvi's Monster".
#
# TODO:     * door tile is *really* ugly, fix this?
#
NAME:       wizlab_cigotuvi
TAGS:       no_rotate
KPROP:      . = w:1 bloody / w:15 nothing
KPROP:      ' = bloody / w:5 nothing
MONS:       human name:sickly dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_human /\
            human name:monstrous dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_human  /\
            human name:deformed dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_human   /\
            human name:twisted dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_human    /\
            human name:grotesque dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_human  /\
            human name:hideous dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_human    /\
            human name:febrile dbname:deformed_humanoid n_adj n_noc tile:mons_deformed_human
MONS:       elf name:sickly dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_elf     /\
            elf name:monstrous dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_elf      /\
            elf name:deformed dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_elf       /\
            elf name:twisted dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_elf        /\
            elf name:grotesque dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_elf      /\
            elf name:hideous dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_elf        /\
            elf name:febrile dbname:deformed_humanoid n_adj n_spe n_noc tile:mons_deformed_elf
MONS:       orc name:sickly dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_orc     /\
            orc name:monstrous dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_orc      /\
            orc name:deformed dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_orc       /\
            orc name:twisted dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_orc        /\
            orc name:grotesque dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_orc      /\
            orc name:hideous dbname:deformed_humanoid n_adj n_spe tile:mons_deformed_orc        /\
            orc name:febrile dbname:deformed_humanoid n_adj n_noc tile:mons_deformed_orc
MONS:       ugly thing, very ugly thing
MONS:       pulsating lump perm_ench:shapeshifter / pulsating lump w:1
MONS:       small abomination
KMONS:      8 = large abomination
KMONS:      9 = generate_awake giant eyeball
KMONS:      0 = col:red clay golem name:flesh_golem name_replace \
            tile:mons_flesh_golem name_descriptor
KMONS:      & = col:mutagenic tentacled monstrosity name:Cigotuvi's_Monster \
            name_replace hp:250 tile:mons_cigotuvis_monster
ITEM:       potion of mutation w:60 / potion of beneficial mutation / \
            potion of cure mutation / potion of degeneration / \
            potion of decay / w:3 potion of strong poison / \
            w:2 potion of poison
ITEM:       potion of beneficial mutation, potion of cure mutation
ITEM:       amulet of resist mutation good_item
ITEM:       randbook disc:transmutation owner:Cigotuvi
ITEM:       book of transfigurations / randbook disc:transmutation
ITEM:       staff of death, scroll of summoning
SHUFFLE:    de / h~ / j^
NSUBST:     de = 1:e / 1:f / *:d, g = 1:g / *:$, h = 1:h / 2:i / *:., j = 1:j / *:k
SUBST:      4 = 4 5:2, " = 6:1 .:16, |^~ = .
MARKER:     ! = lua:fog_machine { \
                 pow_max = 10, delay_min = 10, delay_max = 40, \
                 size = 1, size_buildup_amnt = 10, \
                 size_buildup_time = 500, cloud_type = "mutagenic fog", \
                 excl_rad = 0 }
MARKER:     ? = lua:fog_machine { \
                 pow_max = 20, delay_min = 10, delay_max = 40, \
                 size = 5, size_buildup_amnt = 10, \
                 size_buildup_time = 25, cloud_type = "mutagenic fog", \
                 excl_rad = 0 }
LFLOORCOL:  magenta
LFLOORTILE: floor_nerves
LROCKTILE:  wall_flesh
TILE:       c = wall_flesh
TILE:       m = wall_transparent_flesh
TILE:       + = no_random dngn_fleshy_orifice
COLOUR:     m = yellow
COLOUR:     c+ = lightred
COLOUR:     W = green
:           set_feature_name("shallow_water", "Viscous fluid")
:           set_feature_name("stone_wall", "sinewy wall")
:           set_feature_name("clear_rock_wall", "thin membrane")
:           set_feature_name("floor", "pulsating floor")
: lua_marker('+', props_marker {
:           door_description_noun="fleshy orifice",
:           door_berserk_verb_open="You part the %s%s",
:           door_berserk_adjective="with a squelch!",
:           door_berserk_verb_close="You squeeze the %s%s closed",
:           door_noisy_verb_open="You part the %s%s with a squelch!",
:           door_noisy_verb_close="You squeeze the %s%s closed with a squelch!",
:           door_airborne_verb_open="You reach down and part the %s%s.",
:           door_airborne_verb_close="You reach down and squeeze the %s%s closed.",
:           door_verb_open="You part the %s%s.",
:           door_verb_close="You squeeze the %s%s shut."
:           })
:           wizlab_setup(_G, "Cigotuvi's Fleshworks")
:           set_random_mon_list("pulsating lump / small abomination / ugly thing / very ugly thing")
epilogue{{
            wizlab_milestone(_G, "Cigotuvi's Fleshworks")
}}
MAP
ccccccccccccccccccccccccccccccccccccccccccccc
ccjjjcccc|cccccccccccAccccccccccccWWWW~5hcccc
c|...|c....|ccc...ccc+cccccccccccWh~~~.45hccc
c|8........|cc.4...m...m..ccccccW~......45hcc
c.&........cc...2..m.7.m.1.cccccW~........hcc
c.8........cc...3..m...m.4..ccccW~.......~Wcc
c|.........cc.cccccm...mc...ccccc.......~Wccc
c|...|ccc+ccccc..cccc+cccccccccccc.....hWcccc
ccjjjccc..cccc444.cm...m..3..ccccc+cccccccccc
cccccccc..ccc..!...m.7.m.1..cccccc""ccccccccc
cceecccc..ccc.444..m...m...ccccccc""cc$$g$$cc
ceddecc...cccc....cm...m.cccWccccc""c...c...c
cedde+...cccccc..cccc+cccc...Wcccc""c...c...c
ceddec...ccccccccc.m...m.xx...Wccc""ccc+c+ccc
cceccccc+cccccccc..m.7.m...4..Wccc""c...9...c
ccccccc...cccc...1.m...m....x.ccgc""c...6...c
cccc.........c..2..m...mc....cc$$c""c..6669.c
c.67...ccc...cc..cccc+cccc..ccc+cc""c..66..cc
c...ccccccc+cccccc.m.....cccc.666c""+.....ccc
cc...ccccc'''cccc..m.....4cc9.666c""ccccccccc
cc...ccc''''''cc.!.m.....<4c9....+"""""""""cc
c..cccc''''''''cc.......c4ccc....cc"""""""""c
c..ccc'''''''''cccccc+cccccccccccccccccccc""c
c..cc''''''''''ccccc...ccccccc""""""""""""""c
c..cc''''''''''ccc.......cccc""""""""""""""cc
c..c'''''''''''cc.........ccc""cccccccccccccc
c..c+c+c+c+c+ccc...........cc""""""""""""""cc
c..c8c8c8c8c8ccc...........ccc""""""""""""""c
c..cccccccccccc.....c.c.....cccccccccccccc""c
c...76........+......?......+"""""ccc"""""""c
c...76........c.....c.c.....c""""""c"""""""cc
ccmmmccccmmmcccc...........cccccc""c""ccccccc
c.....cc.....cccWW.......WWcc""""""c""""""ccc
cc.66cccc444cccccWW..0..WWcc""""""ccc""""""cc
cc66.cccc.1.ccccccWWWWWWWccc""ccccccccccc""cc
cc.3cccccc44ccccccccWWWccccc"""""""""""""""cc
ccccccccccccccccccccccccccccc"""""""""""""ccc
ccccccccccccccccccccccccccccccccccccccccccccc
ENDMAP

###############################################################################
# Iskenderun's Mystic Tower
#
# TODO: Could use more unique tiles.
#       A previous commit labeled this one as boring, though acceptable;
#       hopefully emphasizing the orbs and terrain more than previously
#       should help, though more unique contents could certainly be tried.
#
NAME:       wizlab_iskenderun
TAGS:       no_rotate patrolling
MONS:       deep elf mage spells:magic_dart;iskenderun's_battlesphere;\
            iskenderun's_mystic_blast;force_lance
MONS:       purple draconian
MONS:       statue hd:12 spells:orb_of_destruction tile:mons_statue_mage col:vehumet \
            name:conjurer n_adj
KITEM:      D = robe ego:archmagi ident:type, star_item / superb_item, star_item
KITEM:      E = randbook disc:conjuration owner:Iskenderun spells:iskenderun's_mystic\
                _blast|iskenderun's_battlesphere, any book, \
                randbook disc:conjuration owner:Iskenderun
KITEM:      F = any book good_item, any book good_item, any book
KMONS:      DEF = purple draconian
COLOUR:     v = magenta
COLOUR:     Uc = lightmagenta
TILE:       c = dngn_stone_wall_magenta
TILE:       v = dngn_metal_wall_magenta
MARKER:     " = lua:fog_machine { \
                pow_max = 10, delay_min = 10, delay_max = 40, \
                size = 15, cloud_type = "purple smoke" }
NSUBST:     1 = 4 = 1:1 2:19 / 6 = 1:2 2:3 / * = 1:15 .
SHUFFLE:    DEF
LROCKTILE:  wall_zot_magenta
LROCKCOL:   lightmagenta
LFLOORTILE: floor_rough_magenta
LFLOORCOL:  magenta
:           set_random_mon_list("purple draconian / deep elf mage")
:           wizlab_setup(_G, "Iskenderun's Mystic Tower")
epilogue{{
            wizlab_milestone(_G, "Iskenderun's Mystic Tower")
}}
MAP
ccccccccccccccccccccccccccccccccccccccccc
cxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxc
cxxx..x.x.x.x.x.x.xx"xx.x.x.x.x.x.xx.xxxc
cxx<xxAx.x.x.x.x.x.x.x.x.x.x.x.x.x.xx.xxc
cx.x"xxx............x.............xx"x.xc
cx.xx...............................xxxxc
cxxAx...............3...............x.xxc
cx.xx................................x.xc
cxx.......3.......v...v.......3.......xxc
cx.xx...........v.vv.vv.v............x.xc
cxx............vvv11.11vvv............xxc
cx.x..........v.v1vvvvv1v.v..........x.xc
cxx..........v.v1vvvEvvv1v.v..........xxc
cx.x........vvv1vvvv+vvvv1vvv........x.xc
cxx..........v1vvv.....vvv1v..........xxc
cx.x.......vv1vvv.......vvv1vv.......x.xc
cxxx........v1vvv.......vvv1v........xxxc
cx".x...3.....vD+...3...+'+.....3...x."xc
cxxx........v1vvv.......vvv1v........xxxc
cx.x.......vv1vvv.......vvv1vv.......x.xc
cxx..........v1vvv.....vvv1v..........xxc
cx.x........vvv1vvvv+vvvv1vvv........x.xc
cxx..........v.v1vvvFvvv1v.v..........xxc
cx.x..........v.v1vvvvv1v.v..........x.xc
cxx............vvv11.11vvv............xxc
cx.x............v.vv.vv.v............x.xc
cxx.......3.......v...v.......3.......xxc
cx.x.................................x.xc
cxx.x...............3...............x.xxc
cxxxx...............................xxxxc
cx.x"xx.............x.............xx"x.xc
cxx.xx.x.x.x.x.x.x.x.x.x.x.x.x.x.x.xx.xxc
cxxx.xx.x.x.x.x.x.xx"xx.x.x.x.x.x.xx.xxxc
cxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxc
ccccccccccccccccccccccccccccccccccccccccc
ENDMAP

###############################################################################
# Zonguldrok's Shrine
NAME:       wizlab_zonguldrok
TAGS:       no_rotate
:           wizlab_setup(_G, "Zonguldrok's Shrine")
SUBST:      ? = txxx
SUBST:      ! = t..
NSUBST:     Z = Z / '
MONS:       patrolling skeletal warrior, patrolling ancient champion
COLOUR:     t = darkgrey / lightgrey
TILE:       t = dngn_tree_dead
LFLOORCOL:  darkgrey
LROCKCOL:   darkgrey
NSUBST:     d = 2:e / 1:f / * = d:20 e:2
ITEM:       any scroll / any potion, any book w:2
ITEM:       long sword unrand:sword_of_zonguldrok
KFEAT:      GW = G no_mimic
KPROP:      12'def$ZL+ = no_rtele_into
{{
graves = 28 + crawl.random2(4) + crawl.random2(4)
nsubst("G = " .. graves .. ":G / *:.")
lua_marker("G", portal_desc { grave = 1 })
lua_marker("Z", portal_desc { wizard_grave = 1})
lua_marker("W", portal_desc { desc="Zonguldrok's gravestone",
        veto_fragmentation="veto", veto_disintegrate="veto", veto_shatter="veto" })

local zombies_appear_marker = TriggerableFunction:new {
    func = "wizlab_zonguldrok_spawn_zombies",
    repeated = true,
    data = {count = 0, vpcount = 0, swcount = 0, account = 0}
}

local zombies_killed_marker = TriggerableFunction:new {
    data = { number_killed = 0, door_appeared = false },
    func = "wizlab_zonguldrok_killed_zombie",
    repeated = true
}

local wizard_appear_marker = TriggerableFunction:new {
    data = { awoke = false },
    func = "wizlab_zonguldrok_awaken_wizard",
    repeated = true,
    props = {listen_to_slaves = true, only_at_slave = true }
    }

wizard_appear_marker:add_triggerer(DgnTriggerer:new {
    type = "player_move" })

zombies_appear_marker:add_triggerer(DgnTriggerer:new {
    type = "turn",
    delay_min = 150,
    delay_max = 250
})

zombies_killed_marker:add_triggerer(DgnTriggerer:new {
    type = "monster_dies",
    target = "any"
})

lua_marker("M", zombies_appear_marker)
lua_marker("D", zombies_killed_marker)
lua_marker("L", Triggerable.synchronized_markers(wizard_appear_marker))

}}
:           set_feature_name("granite_statue", "gravestone")
:           set_feature_name("floor", "the ground")
SUBST:      M = x
SUBST:      D = c
COLOUR:     W = yellow
TILE:       W = dngn_gravestone_ornate
TILE:       G = dngn_gravestone
SUBST:      LZ = '
LFLOORTILE: floor_tomb
LROCKTILE:  wall_hall_darkgray
TILE:       c = wall_stone_gray
:           set_random_mon_list([[ ogre zombie / troll zombie / hill giant zombie / ]]
:           .. [[ wight w:20 / vampire w:5 / skeletal warrior w:15 / ]])
epilogue{{
            wizlab_milestone(_G, "Zonguldrok's Shrine")
}}
# An "unused" definition for gather_mons and @?? monster
MONS:       generate_awake ancient lich  col:brown name:antique_lich name_replace \
            name_descriptor tile:mons_zonguldrok_lich
MAP
M   xxxxxxxxxxxxxxxxxxx
   xx?????????????????xx
  xx?!!!!!!!!!!!!!!!!!?xx
 xx?!!.G.G.G.G.G.G.G.!!?xx
xx?!!.G.G.G.G.G.G.G.G.!!?xx
x?!!.G.G.G.G.G.G.G.G.G.!!?x
x?!.G.G.GcccccccccG.G.G.!?x
x?!G.G.G.c'ddcdd'c.G.G.G!?x
x?!.G.G.ccdd'c'ddcc.G.G.!?x
x?!G.Gcccddcc+ccddcccG.G!?x
x?!.G.c'dd'cLLLc'dd'c.G.!?x
x?!G.Gc$'ccc'''ccc'$cG.G!?x
x?!.G.c$$c''ZZZ''c$$c.G.!?x
x?!G.Gcccc''ZWZ''ccccG.G!?x
x?!.G.c''+''ZZZ''+''c.G.!?x
x?!G.Gc'2ccc'''ccc1'cG.G!?x
x?!.G.c''1'c'''c'1''c.G.!?x
x?!G.Gccc''ccccc1'cccG.G!?x
x?!.G.G.cc'''c'''cc.G.G.!?x
x?!G.G.G.c'''c'''c.G.G.G!?x
x?!.G.G.GccccDccccG.G.G.!?x
x?!!.G.G.G.GV.VG.G.G.G.!!?x
xx?!!.G.G.G..<..G.G.G.!!?xx
 xx?!!.G.G.G.A.G.G.G.!!?xx
  xx?!!!!!!!!!!!!!!!!!?xx
   xx?????????????????xx
    xxxxxxxxxxxxxxxxxxx
ENDMAP

###############################################################################
# Wucad Mu's Monastery
#
# TODO: I think this is done, apart from not having "alien"-esque statue tiles.
#       Disintegration as a one-note solution is pretty boring...
NAME:       wizlab_wucad
TAGS:       no_rotate
SUBST:      T = t.
KMONS:      8 = orange crystal statue name:Statue_of_Wucad_Mu n_rpl n_the \
                hd:20 hp:300 tile:mons_wucad_mu_statue
KITEM:      8 = staff of energy unrand:staff_of_wucad_mu
COLOUR:     =c = darkgrey
COLOUR:     t = lightred / red w:3
TILE:       t = dngn_tree_lightred / dngn_tree_red w:4 / dngn_tree_yellow w:4
# This used to specify dngn_statue_troll as the only middle case, but that tile
# no longer exists.
TILE:       G = dngn_granite_statue w:1 / \
                dngn_statue_angel w:1 / \
                dngn_statue_imp w:1 / \
                dngn_statue_ancient_evil w:1 / \
                dngn_statue_ancient_hero w:1
COLOUR:     AG = red
COLOUR:     < = lightred
TILE:       c = dngn_stone_dark
LFLOORTILE: floor_pebble_white
KFEAT:      ' = open_door
KFEAT:      1234567 = .
KMONS:      1234567 = nothing
LROCKCOL:   darkgrey
ITEM:       potion of experience, potion of beneficial mutation
ITEM:       manual of fighting / manual of armour / manual of spellcasting / \
            manual of staves / manual of fighting / manual of dodging
ITEM:       book of enchantments
SHUFFLE:    defg
LFLOORCOL:  white
KMONS:      F = human name:monk n_suf col:white hd:10 dur:2 sum:shadow_creatures \
            nas:old_memories tile:mons_human_monk seen / deep troll name:monk n_suf \
            dur:2 seen sum:shadow_creatures nas:old_memories tile:mons_deep_troll_monk \
            / iron troll name:monk n_suf col:white dur:2 sum:shadow_creatures \
            nas:old_memories seen tile:mons_iron_troll_monk w:5
{{
dgn.persist.wucad_mu_died = false

local function trigfn (spot)
  return Triggerable.synchronized_markers(function_at_spot(
            "wizlab_wucad_msgfn",
            { spot=spot, trig = false}, true, { only_at_slave = true,
              listen_to_slaves = true }))
end

lua_marker('1', trigfn(1))
lua_marker('2', trigfn(2))
lua_marker('3', trigfn(3))
lua_marker('4', trigfn(4))
lua_marker('5', trigfn(5))
lua_marker('6', trigfn(6))
lua_marker('7', trigfn(7))


local summon_marker = TriggerableFunction:new ({
    func="wizlab_wucad_summon_monks",
    repeated=true })

summon_marker:add_triggerer(DgnTriggerer:new {type="turn", delay_min=150,
    delay_max=400 })

local wucad_marker = TriggerableFunction:new ({
    func="callback.wizlab_wucad_wucad_died",
    repeated=false })

wucad_marker:add_triggerer(DgnTriggerer:new {type="monster_dies",
    target="Statue of Wucad Mu"})

lua_marker('A', summon_marker)
lua_marker('A', wucad_marker)

}}
MARKER:     G = lua:props_marker {veto_fragmentation="veto", veto_disintegrate="veto", \
                                  veto_shatter="veto" }
MARKER:     = = lua:props_marker {veto_fragmentation="veto", veto_disintegrate="veto", \
                                  veto_shatter="veto" }
MARKER:     + = lua:props_marker {veto_fragmentation="veto", veto_disintegrate="veto", \
                                  veto_shatter="veto" }
MARKER:     ' = lua:props_marker {veto_fragmentation="veto", veto_disintegrate="veto", \
                                  veto_shatter="veto" }
MARKER:     c = lua:props_marker {veto_fragmentation="veto", veto_disintegrate="veto", \
                                  veto_shatter="veto" }
MARKER:     t = lua:props_marker {veto_fragmentation="veto", veto_disintegrate="veto", \
                                  veto_shatter="veto", veto_fire="veto" }
:           wizlab_setup(_G, "Wucad Mu's Monastery")
:           set_border_fill_type("tree")
:           set_random_mon_list("shadow / flayed ghost w:2 / hungry ghost w:2")
:           set_feature_name("tree", "autumnal tree")
:           set_feature_name("stone_wall", "crumbled stone wall")
:           set_feature_name("granite_statue", "strange statue")
:           set_feature_name("floor", "timeless floor")
epilogue{{
            wizlab_milestone(_G, "Wucad Mu's Monastery")
}}
MAP
tttttttttttttttttttttttttttttttttttttttt
tttttttttttttttttttttttttttttttttttttttt
ttttttttttttttTTTTTTTttttttttttttttttttt
ttttttTTTTTTTT.......TTTTTTTTTTTTttttttt
tttttT.........ccccc.............Ttttttt
ttttT.........cc777cc.............Tttttt
tttT.......cccc77777cccc...........Ttttt
ttT.......cc..cc777cc..cc......ccc..Tttt
ttT......cc....cc+cc....cc....cc6cc..Ttt
ttT.....Tc....G.....G....cT..cc6U6cc.Ttt
ttT.....cc...............cc...cc6cc..Ttt
ttT......+.G.....8.....G.+.....c+c...Ttt
ttT.....cc...............cc..........Ttt
ttT.....Tc....G.....G....cT..........Ttt
ttT.c..cTcc.............cccT.........Ttt
ttTcc++ccccccc.......ccccccc+cc......Ttt
ttcc5555cccdeccc+++cccfgccc444cc.....Ttt
ttc555555c....c.....c....c44444c....Tttt
ttc555555cc.............cc44444cc..ctttt
ttc555555ccccccccccccccccccc+cccc++ccttt
ttcc5555ccc.............ccc222cc3333cctt
tttccccccc...............+22222+33333ctt
ttttttttccc..ccc+++ccc..ccc222cc3333cctt
tttttttttcccccTT111Ttccccccccccccccccttt
ttttttttttttttT11111Tttttttttttttttttttt
tttttttttttT.........TTTTTTttttttttttttt
tttccccctttT.....G........Ttcccccttttttt
ttcc...cctT..............Ttcc...cctttttt
ttc..A..'..................'..<..ctttttt
ttcc...cctT.....TTTT.....Ttcc...cctttttt
tttccccctttT...TTttTT....Tttcccccttttttt
ttttttttttttTTTTttttTTTTTttttttttttttttt
tttttttttttttttttttttttttttttttttttttttt
tttttttttttttttttttttttttttttttttttttttt
ENDMAP

################################################################################
# The Roulette of Golubria (by HangedMan.)
# Golubria's fascination with translocations led him to warp out a sub-realm
# of the Abyss into his own translocations playground, with some nasty and wild
# security systems built in to defend his many assorted possessions.
#
# Teleporter explanations: three sets of three chained rooms each,
# rotating the same amount of rooms per direction in the same direction,
# though distorted by the use of the ninth room and each set rotated.
NAME:    wizlab_golubria
TAGS:    no_pool_fixup
LFLAGS:  no_tele_control
KMONS:   1 = spatial vortex w:7 / blink frog / insubstantial wisp w:3 / nothing w:5
KMONS:   2 = deep elf summoner w:5 ; dart ego:dispersal w:20 | dart w:5 | nothing / \
             rakshasa w:5 ; dart ego:dispersal w:20 | dart w:5 | nothing / \
             boggart ; dart ego:dispersal w:20 | dart w:5 | nothing /  \
             wizard ; dart ego:dispersal w:20 | dart w:5 | nothing
KMONS:   3 = rakshasa w:5 ; staff ego:distortion | staff ego:vorpal w:6 | dagger \
             ego:distortion | dagger ego:vorpal w:6 | spear ego:distortion | \
             spear ego:vorpal w:6 . dart ego:dispersal / \
             boggart w:5 ; staff ego:distortion | staff ego:vorpal w:6 | dagger \
             ego:distortion | dagger ego:vorpal w:6 | spear ego:distortion | \
             spear ego:vorpal w:6 . dart ego:dispersal / \
             wizard ; staff ego:distortion | staff ego:vorpal w:6 | dagger \
             ego:distortion | dagger ego:vorpal w:6 | spear ego:distortion | \
             spear ego:vorpal w:6 . dart ego:dispersal
KMONS:   04 = large abomination w:15 / small abomination w:15 / unseen horror w:5 / \
              thrashing horror w:30 / skeleton w:30 / freezing wraith w:5 /  \
              hellwing / chaos spawn w:5 / orange demon / blue devil /  \
              hell hound / red devil w:5 / lesser demon w:25 / octopode w:5 / \
              ugly thing w:30 / fire elemental w:5 / air elemental w:5
KMONS:   95 = ynoxinul / smoke demon / sixfirhy / sun demon w:5 / efreet w:5 / \
              soul eater w:5 / hell knight w:5 / demonic crawler / raiju / \
              ancient zyme w:20 / lurking horror / tentacled starspawn w:30 / \
              vapour w:5 / earth elemental w:5 / water elemental / \
              very ugly thing / base draconian / guardian serpent / brain worm / \
              eidolon w:5 / shadow wraith / anaconda skeleton w:5 / \
              flaming corpse / great orb of eyes w:5 / giant orange brain
KMONS:   6 = executioner w:5 / balrug w:5 / cacodemon / shadow demon / hellion w:5 / \
             tormentor w:5 / lorocyproca w:5 / blizzard demon / \
             reaper / lich w:5 / angel / profane servitor w:5 / \
             death drake w:5 / tentacled monstrosity w:20 / draconian shifter w:20 / \
             starcursed mass w:30 / apocalypse crab w:20
KMONS:   7 = eldritch tentacle
KMONS:   8 = silver statue
# Translocations items, abyss escape aides, shrouds, and an immeadiate aide.
KITEM:   d = scroll of blinking / scroll of teleportation q:2 / \
             wand of teleportation w:5 / any scroll w:1
KITEM:   e = ring of teleport control w:9 / ring of teleportation w:20 / any ring w:1
KITEM:   f = book of spatial translocations w:5 / book of the warp w:5 / \
             manual of translocations w:5 / randbook disc:translocation numspells:5 / \
             randbook disc:translocation owner:Golubria numspells:7 \
             spells:shroud_of_golubria|passage_of_golubria
KITEM:   g = ring of flight / potion of flight q:2 / \
             wand of digging w:5 / lantern of shadows / \
             potion of speed w:5 / scroll of fog / potion of porridge / \
             any wand w:1 / any potion w:1 / any scroll w:1
KITEM:   h = pair of boots ego:flying w:9 / pair of boots ego:running w:1 / \
             pair of boots ego:stealth w:9 / pair of boots w:1
KITEM:   i = wand of disintegration
KITEM:   j = any level:3, any level:3 / nothing
KITEM:   k = star_item / any w:5, any w:5 / nothing
KITEM:   | = cloak good_item w:75 / randart cloak w:95 / cloak unrand:cloak_of_flash / \
             cloak unrand:cloak_of_starlight / cloak unrand:cloak_of_the_thief
KFEAT:   m = iron_grate
KFEAT:   ~ = deep_water
KFEAT:   ^ = known teleport trap
KFEAT:   8_ = altar_lugonu
KFEAT:   OPQRSTUVW&{( = teleporter
KFEAT:   opqsrtuvw@}) = floor
KPROP:   a"_~ = no_rtele_into
MARKER:  ^ = lua:fog_machine { cloud_type = "translocational energy", pow_max = 25, \
             delay_min = 30, delay_max = 60, walk_dist = 1, size_min = 2, size_max = 3 }
SHUFFLE: ozRrIUuLO / uLOozRrIU / rIUuLOozR, pZSsJVvMP / vMPpZSsJV / sJVvMPpZS
SHUFFLE: zRIULO / RzUIOL, ZSJVMP / SZVJPM, HTKW / THWK
NSUBST:  @ = 1:w / 1:Y / 1:Q / *:<, 4 = 4:5 / *:4, ` = 4:d / 3:| / 1:|j / 1:i / 4:j / *:`
NSUBST:  a = 1:_ / 1:_" / *:a, + = 1:+ / *:c, ( = 1:} / 1:( / *:<
NSUBST:  2 = 1:6 / 2 = 66993 / 2:9 / * = 2:9 3:1 9:2, 1 = 2:0 / *:1, 0 = 2:9 / *:0
NSUBST:  [ = 1:< / *:d, d = 2:k / 2:e / 2:f / 3:g / 2:eegghhj
NSUBST:  7 = 1:7 / 1 = 7:4 `:6 / *:`, A = 1:) / 1:< / 1:{ / 1:A
SUBST:   H = O, I = P, J = Q, K = R, L = S, M = T, Y = U, z = V, Z = W, ? = &
SUBST:   a = ":70 x:40 ccCC~, - = ':50 x:40 ccCC~, E = nccCC, c = cccb, C = cb
SUBST:   B = ccbn..., e = de, j = jjjjg., k = kkj
COLOUR:  n = lightgreen
COLOUR:  c = white
COLOUR:  OPQRSTUVW&{( = warp
COLOUR:  opqrstuvw@}) = gold
COLOUR:  X = darkgrey
LFLOORCOL: green
FTILE:   '"Gbca-n45_+ = floor_demonic_green
FTILE:   .012369AB< = floor_rough_green / floor_pebble_green w:15
FTILE:   `~78N = floor_demonic_green / floor_pebble_green / floor_rough_green w:5
FTILE:   defghijk| = floor_rough_green
LROCKTILE: wall_zot_green
TILE:    b = dngn_crystal_green / dngn_crystal_cyan w:5
TILE:    c = dngn_stone_wall_green / dngn_stone_wall_cyan w:5
TILE:    n = dngn_transparent_stone_green / dngn_transparent_stone_cyan w:5
TILE:    X = dngn_dimension_edge
FTILE:   OPQRSTUVW&{( = floor_rough_green
TILE:    opqrstuvw@}) = floor_black_cobalt

{{
-- This isn't the prettiest way of handling the teleporters, but it guarantees
-- they behave exactly the same way as in HangedMan's original version. All I've
-- done is remove some massive code duplication. [evilmike]

local teleporter_glyph = "OPQRSTUVW&?{("
local teleport_spot_glyph = "opqrstuvw@!})"
local tele_marker = {}

for i = 1, #teleporter_glyph do
    tele_marker[i] = TriggerableFunction:new {
                     func="teleporter_golubria_switch_fn",
                     data = {teleport_spot=i},
                     repeated=true }
    tele_marker[i]:add_triggerer(DgnTriggerer:new { type="player_move" })
    lua_marker(teleporter_glyph:sub(i,i), tele_marker[i])
    lua_marker(teleport_spot_glyph:sub(i,i), portal_desc { teleport_spot=i})
end

set_random_mon_list([[rakshasa w:15 / deep elf summoner w:15 / wizard w:15 / spatial vortex w:15 /
                    boggart / blink frog w:5 / shadow wraith w:5 / unseen horror /
                    raiju / ynoxinul / neqoxec / chaos spawn / giant orange brain /
                    large abomination w:15 / small abomination w:15 / skeleton w:20 /
                    hellwing w:5 / smoke demon w:5 / hell hound w:5 / very ugly thing w:5 /
                    golden eye w:5 / executioner w:3 / shadow demon w:4 / hellion w:3 /
                    thrashing horror w:25 / tentacled starspawn w:25 / ]])

set_border_fill_type('permarock_wall')
set_feature_name("permarock_wall", "The dimension's edge")
set_feature_name("green_crystal_wall", "wall of crystal")
wizlab_setup(_G, "The Roulette of Golubria")
}}

epilogue{{
            wizlab_milestone(_G, "The Roulette of Golubria")
}}
MAP
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXcccccccEEccccccccccXXXXXXXXXXXXXXXXX
XXXXXccccccXXXXccaaacc.o..ccaaaaaaccXXXXccccccXXXXXX
XXXEEc...Pccccccaaacc......ccaaaaaaccccccZ...cEEXXXX
XXXEv.....ccaaaaaaacz......Rcaaaaaaaaaacc.....pEXXXX
XXcc.......naaaaaaan..BBBB..naaaaaaaaaan.......ccXXX
XXc....B...n"aaaaa"n..0B2...n"aaaaaaaa"n...B....cXXX
XXc...BBB.1c"aaaaa"c...B....c"aaaaaaaa"c0.BBB...cXXX
XXc....BB..cccaaaaacc......ccaaaaaaaaccc..BB....cXXX
XXcM.....2...caaaaaac1.[..1caaaaaaaaac...2.....ScXXX
XXccc..0..[..caaaaaacc....cc---aaaaaac..[..1..cccXXX
XXXccnncc..1.ccaaaa--cc..cc-----aaaacc.1..ccnnccXXXX
XXXcaa""c.....c--a--'-c+cc-''-'--a--c.....c""aacXXXX
XXXcaaaacccc..c'---'-''-'-'--'-'---'c..ccccaaaacXXXX
XXccaaaaaaaccc+-'-'------4------'-'-+cccaaaaaaaccXXX
Xccaaaaaaaaa-'---'------'G'------'---'-aaaaaaaaacXXX
Xcaaaaaaaaaa--'-4-'--'-'---'-'--'-4-'--aaaaaaaaaacXX
Xcaaaaaaaaaaa--'-G-''C'C'-'C'C''-G-'--aaaaaaaaaaacXX
Xcaaaaaaaaaa--'-'--CCCCCC(CCCCCC--'-'--aaaa""aaaacXX
Xcaaaaaaaaa--'---'Cn'C^'CnC'^C'nC'---'--aaccnnccacXX
Xcaaaaaaaaa-'----'C'@C'`'n'`'C@'C'----'-ccc...HcccXX
Xcaaaa""aaa--'--'CCCC`````````CCCC'--'-cc1......ccXX
Xcaccnnccaa-'----'C^'`````````'^C'---'cc....0B...cXXXXXXXX
XcccO...ccc-'---'CC'````mmm````'CC'---+..[.BBB..qEXXnnnnnX
Xcc......1cc-'-'-'CC'``mm7mm```CC'-'-'c.....2B...EXXnA.AnX
Xc.........cc-4G--(nn``m787m``nn(--G4-cc.........cXXn...nX
XE...B2.....c'-'-'CC'``mm7mm```CC'-'-'-cc1......ccXXnA.AnX
XEu..BBB.[..+---'CC'````mmm````'CC'---'-ccc...TcccXXnnnnnX
Xc...B0....cc'---'C^'`````````'^C'----'-aaccnnccacXXXXXXXX
Xcc......1cc-'--'CCCC`````````CCCC'--'--aaa""aaaacXX
XcccL...ccc-'----'C'@C'`'n'`'C@'C'----'-aaaaaaaaacXX
Xcaccnnccaa--'---'Cn'C^'CnC'^C'nC'---'--aaaaaaaaacXX
Xcaaaa""aaaa--'-'--CCCCCC(CCCCCC--'-'--aaaaaaaaaacXX
Xcaaaaaaaaaaa--'-G-''C'C'-'C'C''-G-'--aaaaaaaaaaacXX
Xcaaaaaaaaaa--'-4-'--'-'---'-'--'-4-'--aaaaaaaaaacXX
Xccaaaaaaaaa-'---'------'G'------'---'-aaaaaaaaaccXX
XXccaaaaaaaccc+-'-'------4------'-'-+cccaaaaaaaccXXX
XXXcaaaaaccc..c'---'-'--'-'-''-'---'c..ccccaaaacXXXX
XXXcaa""cc....c--a--'-''-cc+c-'--a--c.....c""aacXXXX
XXXccnncc..1.ccaaaa-----cc..cc--aaaacc.1..ccnnccXXXX
XXccc..1..[..caaaaaaaaacc....ccaaaaaac..[..0..cccXXX
XXcW.....2...caaaaaaaaac1..[.1caaaaaac...2.....IcXXX
XXc....BB..cccaaaaaaaacc......ccaaaaaccc..BB....cXXX
XXc...BBB.0c"aaaaaaaa"c....B...c"aaaaa"c1.BBB...cXXX
XXc....B...n"aaaaaaaa"n...2B0..n"aaaaa"n...B....cXXX
XXcc.......naaaaaaaaaan...BBB..naaaaaaan.......EcXXX
XXXEt.....ccaaaaaaaaaacV......Jcaaaaaaacc.....rcXXXX
XXXEEc...Kccccccaaaaaacc......ccaaaccccccU...EcEXXXX
XXXXXccccccXXXXccaaaaaacc..s.ccaaaccXXXXccccccXXXXXX
XXXXXXXXXXXXXXXXccccccccccEEcccccccXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
ENDMAP

###############################################################################
# Random and semi-random Wizard vaults
###############################################################################

###############################################################################
# Chambers of the Cloud Mage (by Mu.)
#
# TODO: Needs an "ocean of clouds" tiles, and fluffy "cotton wool" cloud tiles.
NAME:       wizlab_cloud
TAGS:       no_rotate
MONS:       vapour, air elemental, insubstantial wisp
KMONS:      4 = twister
{{
wizname = crawl.make_name()

kmons ("    5 = patrolling Cloud Mage dbname:Cloud_Mage name:" .. string.gsub(wizname, " ", "_")
         .. " ; robe unrand:robe_of_clouds . quick blade ego:electrocution |"
         .. " quick blade ego:freezing | dagger ego:speed | dagger ego:electrocution"
         .. " | dagger ego:freezing")
}}
NSUBST:     . = 3:1 / * = .:120 1:2 2:6 3:1
MARKER:     ! = lua:fog_machine { \
                pow_max = 10, delay_min = 10, delay_max = 40, \
                size = 2, size_buildup_amnt = 4, \
                size_buildup_time = 25, cloud_type = "grey smoke", \
                colour = "white", name = "white fluffiness" \
            }
ITEM:       w:20 potion of flight / w:20 potion of water / \
            potion of magic / potion of speed / \
            potion of resistance / gold / potion of agility / potion of brilliance
ITEM:       wand of lightning / staff of air / ring of flight /\
            gold / scroll of silence / ring of teleport control / \
            quick blade / ring of evasion / ring of see invisible / \
            book of clouds / any book w:15 / any good_item / any w:20
ITEM:       randbook disc:air
KFEAT:      #4 = deep_water
NSUBST:     e = 2:f / * = de, # = 5:4 / 4 = 4## / *:#
COLOUR:     +<b = white
LFLOORCOL:  lightblue
LFLOORTILE: floor_rough_lightblue
TILE:       o = dngn_transparent_stone_white
TILE:       b = dngn_crystal_white
COLOUR:     wWv# = silver
:           set_border_fill_type('open_sea')
:           set_random_mon_list("vapour / air elemental")
:           wizlab_setup(_G, "The Chambers of " .. wizname .. " the Cloud Mage")
:           set_feature_name("floor", "damp floor")
:           set_feature_name("green_crystal_wall", "wall of white crystal")

epilogue{{
            wizlab_milestone(_G, "The Chambers of " .. wizname .. " the Cloud Mage")
}}
#           Map is ugly because border_fill_type doesn't allow for (yet)
#           recolouring.
MAP
#####################################################################
#####################################################################
#####################################################################
#####################################################################
#####################################################################
#####################################################################
#####################################################################
#####################################################################
#####################################################################
#####################################################################
#####################oooooooooooooooooooooooooooooo##################
###################ooo............................ooo################
#################ooo...wwwwwwwwwwwwwwwwwwwwwwwwww...ooo##############
################oo...wwwwwwwbbbbbbbbbbbbbbbbbbbbwww...oo#############
################o..wwwwwwwbbbbbbbbbbbbbbbbbbbbbbwwwww..o#############
###############oo.wwwwwwbbbbbbbb..b..b..b..b..bbwwwwww.oo############
###############o..wwwwwbb.....b.!............!.bwwwwww..o############
##############oo.wwwwwwbb.eee.b................bwwwwwww.oo###########
##############o..wwwwwbbb.eee.b................bWWWWWWW..o###########
##############o..wwwwwbbb.eee.+...5............+.........o###########
##############o..wwwwwbbb.eee.b................bWWWWWWW..o###########
##############oo.wwwwwwbb.eee.b................bwwwwwww.oo###########
###############o..wwwwwbb.....b.!............!.bwwwwww..o############
###############oo.wwwwwwbbbbbbbb..b..b..b..b..bbwwwwww.oo############
################o..wwwwwwwbbbbbbbbbbbbbbbbbbbbbbwwwww..o#############
################oo...wwwwwwwbbbbbbbbbbbbbbbbbbbbwww...oo#############
#################oo....wwwwwwwwwwwwwwwwwwwwwwwwww...ooo##############
##################oooo............................ooo################
#####################bbb.......bbbbbbbbbbbbbbbbbbbb##################
#####################oo.......oo#####ooo#############################
####################oo.......oo#####oo.oo############################
###################oo.......oo#####oo.!.oo###########################
###################o!......ooo####oo.....ooo#########################
###################ooo.......ooo#oo........oo########################
####################oooo.......ooo..........oo#######################
#######################ooo!.....ooo..........o#######################
########################o.....!ooobb+bb......oo######################
#######################ooo......obb...bb!.....o######################
########################o......obb.....bb.....oo#####################
#######################ooo......b.......b......o#####################
#######################o.!.....ob.<.A.<.b......o#####################
#######################o.b......b.......bo...!oo#####################
#######################o.bo.....bb.....bb......o#####################
#######################b+bbbb....bb...bb!.....oo#####################
#######################o....bo...!bbbbb......oo######################
#######################o.dd.bo.............oob#######################
#######################o.dd.boo...........bbbbbbbbb##################
#######################o....b#o..........!...+....o##################
#######################ooooob#oo........ooooob.dd.o##################
###############################oo......oo####b.dd.o##################
################################oo.!..oo#####b....o##################
#################################oooooo######booooo##################
#####################################################################
#####################################################################
#####################################################################
#####################################################################
#####################################################################
#####################################################################
#####################################################################
#####################################################################
#####################################################################
ENDMAP

###############################################################################
# Halls of the Hellbinder (by Mu.)
NAME:       wizlab_demon
TAGS:       no_rotate no_hmirror no_vmirror
LFLOORCOL:  red
LROCKCOL:   red
LFLOORTILE: floor_pebble_lightred
COLOUR:     c = darkgrey
COLOUR:     -|/\o[]CDEFGHIJKLMNOPQRSTUVWXYZu = yellow
KFEAT:      -|/\o[]CDEFGHIJKLMNOPQRSTUVWXYZu = floor
KFEAT:      _ = altar_makhleb
KPROP:      ' = bloody / nothing
KPROP:      _ = bloody
TILE:       c = wall_stone_dark
# symbols roughly corresponding to sigil shape
FTILE:      - = sigil_straight_E_W
FTILE:      | = sigil_straight_N_S
FTILE:      / = sigil_straight_NE_SW
FTILE:      \ = sigil_straight_NW_SE
FTILE:      o = sigil_circle
FTILE:      T = sigil_cross
FTILE:      Y = sigil_Y
FTILE:      ] = sigil_Y_left
FTILE:      [ = sigil_Y_right
FTILE:      O = sigil_rhombus
FTILE:      Q = sigil_algiz_left
FTILE:      R = sigil_algiz_right
FTILE:      S = sigil_sharp_E_NE
FTILE:      Z = sigil_sharp_W_SW
FTILE:      K = sigil_straight_E_NE_SW
FTILE:      X = sigil_fourway
FTILE:      Uu = sigil_Y_inverted
FTILE:      V = sigil_Y_leftleaning
FTILE:      W = sigil_Y_rightleaning
# remaining sigil patterns
FTILE:      C = sigil_curve_S_E
FTILE:      D = sigil_curve_S_W
FTILE:      E = sigil_curve_N_E
FTILE:      F = sigil_curve_N_W
FTILE:      G = sigil_straight_E_SW
FTILE:      H = sigil_straight_W_SE
FTILE:      I = sigil_straight_S_NE
FTILE:      J = sigil_straight_S_NW
FTILE:      L = sigil_straight_N_SE
FTILE:      M = sigil_straight_N_SW
FTILE:      N = sigil_straight_E_NW
FTILE:      P = sigil_straight_W_NE
RTILE:      x = wall_undead
MARKER:     h = lua:fog_machine { \
                pow_max = 10, delay_min = 10, delay_max = 40, \
                size = 2, size_buildup_amnt = 5, \
                size_buildup_time = 25, cloud_type = "flame", \
                excl_rad = -1 }
KMONS:      2 = lorocyproca w:1 / hell beast w:15 / reaper /\
            green death / soul eater w:20 / tormentor w:5
KMONS:      3u = ice devil / red devil / orange demon / blue devil / \
            iron devil w:5 / ynoxinul / sun demon
KMONS:      4 = kobold demonologist
KMONS:      5 = deep elf demonologist
KMONS:      6 = balrug / cacodemon / blizzard demon / hellion
{{
wizname = crawl.make_name()

kmons     ("1 = patrolling Hellbinder dbname:Hellbinder name:" .. string.gsub(wizname, " ", "_"))
}}
KITEM:      $ = gold / w:1 scroll of torment / w:1 scroll of summoning
KITEM:      i = rod of demonology / ring of fire / ring of protection from fire /\
            amulet of conservation / scroll of torment / scroll of summoning /\
            demon blade w:1 / demon whip w:1 / demon trident w:1 / gold / wand of fire /\
            wand of draining / staff of summoning / any book w:30 / any good_item w:15
KITEM:      B = randbook disc:summoning
NSUBST:     i = 2:B / *:i
SHUFFLE:    A<, 4d, 7f, 4d / 5e, 7f / 8g
SUBST:      7 = 4, 8 = 5, df = 6, eg = 3
:           set_random_mon_list([[crimson imp / shadow imp / lemure / iron imp / quasit / ]]
:                        .. [[white imp / ufetubus / red devil / rotting devil / orange demon / ]])
:           wizlab_setup(_G, "The Hall of " .. wizname .. " the Hellbinder")
:           set_feature_name("floor", "hot floor")
:           set_feature_name("stone_wall", "black wall")
:           set_feature_name("rock_wall", "carved rock wall")
epilogue{{
            wizlab_milestone(_G, "The Hall of " .. wizname .. " the Hellbinder")
}}
MAP
cccccccccccccccccccccccccccccccccccccccccccccc
ccccccc.cccccc...................cccccc.cccccc
ccccc.....cccc.cc+ccccc+ccccc+cc.cccc.....cccc
cccc..G-H..ccc.c...cccc.cccc...c.ccc...o...ccc
ccc../...\..cc.+.A.ccc...ccc.<.+.cc..|...../cc
ccc.I...3.J.cc.c...cc.....cc...c.cc.-O-.3./.cc
cc..|..u..|....ccccc..c.c..ccccc.....|.3./...c
cc..|.3Y..|....cccc..cc.cc..cccc......3./....c
ccc.L.....M.cc.ccc.....4.....ccc.cc....K----cc
ccc..\.../..cc.cc..cccc.cccc..cc.cc.../.....cc
cccc..N-P..ccc.+.......d.......+.ccc./.....ccc
ccccc.....cccc.ccccccccccccccccc.cccc.....cccc
ccccccc.cccccc...................cccccc.cccccc
ccccccc.cccccc.cccccccx.xccccccc.cccccc.cccccc
ccccccc.ccccccx.cccccc.c.cccccc.xcccccc.cccccc
ccccccc.cccccccx.cccc.ccc.cccc.xccccccc.cccccc
ccccccc.ccccccccx.cc.ccccc.cc.xcccccccc.cccccc
ccccccc.cccccccccc..ccccccc..cccccccccc.cccccc
ccccccc.cccc.6...................6.cccc.cccccc
ccccccc.cccc..ccccccccc.ccccccccc..cccc.cccccc
ccccccc.ccccc..cccc$$$c.c$$$cccc..ccccc.cccccc
ccccccc.cccccc..ccc$$$+.+$$$ccc..cccccc.cccccc
ccccccc.cc.cccc..cc$$$c.c$$$cc..cccc.cc.cccccc
ccccccc......c.x..ccccc.ccccc..x.c..Z...cccccc
ccccccc...o...x.c..cccc.cccc..c.x../..O.cccccc
cccccc..\.../..ccc..ccc.ccc..ccc../..OTO.ccccc
cccccc...\3/...cccc..cc.cc..cccc./2.2.U..ccccc
ccccc..\2CXD2/..cccc.......cccc./..2.3....cccc
cccccc..\|2|/...ccccc.\7/.cccccS--------Zccccc
cccccc...Q.R....ccccc..Y..ccccc......../.ccccc
ccccccc..ETF....ccccc..|..ccccc......./.cccccc
cccccccc........ccccc..f..ccccc......S.ccccccc
cccccccccc......cccc..ccc..cccc......ccccccccc
ccccccccccc.....ccc..ccccc..ccc.....cccccccccc
cccccccccccc.....c...ccccc...c.....ccccccccccc
cccccccccccc..\./..cc.ccc.cc..\./..ccccccccccc
ccccccccccccc..V..cccc.c.cccc..W..cccccccccccc
ccccccccccccc./...ccccchccccc...\.cccccccccccc
cccccccccccccc.....ccc.c.ccc.....ccccccccccccc
ccccccccccccccc.....c.ccc.c.....cccccccccccccc
ccccccccccccccccc.....ccc.....cccccccccccccccc
ccccccccccccccccccc....0....cccccccccccccccccc
ccccccccccccccccccccc.....cccccccccccccccccccc
cccccccccccccccccccccxc+cxcccccccccccccccccccc
ccccccccccccccccccccc.....cccccccccccccccccccc
ccccccccccccccccccc...G"H...cccccccccccccccccc
ccccccccccccccccc...GP...NH...cccccccccccccccc
cccccccccccccccc..G[.......]H..ccccccccccccccc
ccccccccccccccc../..N.....P..\..cccccccccccccc
ccccccccccccccc.I.............J.cccccccccccccc
cccccccccccccc..U.....G.H.....U..ccccccccccccc
cccccccccccccc.I.J.../...\...I.J.ccccccccccccc
ccccccccccccc..|..../..1..\....|..cccccccccccc
ccccccccccccc..|.../\.'''./\...|..cccccccccccc
ccccccccccccc..|../xx\'_'/xx\..|..cccccccccccc
cccccccccccc...L./..xxN'Pxx..\.M...ccccccccccc
cccccccccccci...W..G.xxxxx.H..V...iccccccccccc
ccccccccccccii...NP.........NP...iiccccccccccc
cccccccccccciii.................iiiccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccc
ENDMAP

###############################################################################
# Incomplete and TODO work area.
#
# See git history for previous versions of Ozocubu, Alistair, Borgnjor.
#
# March 2013 note: there isn't the greatest of interest in making
# the majority of these potential portals, as nice as that would be,
# and the portal is effectively "finished".
# More effort should be put into editing above vaults anyway.
#
# PLANNING AREA:
#
# From spells:
#
# Alistair's Brewery: mutated wizards, mephitic cloud generators,
#    cupboards full of potions, confused monsters.
# Lee's Rapid Deconstructor: golems and "monk" or otherwise unarmed creatures,
#    exploding features and exploding corpses. It's a timed vault, so you have
#    to get to the loot quickly and avoid the hordes of monsters.
# Lehudib's Crystal Spire:  crystal walls and crystal golems, crystal monsters,
#    spear throwers (statues with crystal spear), possibly the unrand as the
#    loot.
# Maxwell's Forge: Maxwell employs a bunch of angels to churn out weapons;
#    stashes of hammers, flame clouds, other "smithy" styled themes, with black
#    smoke.
# Olgreb's Toxic Laboratory: poisonous clouds, a toxic radiance effect,
#    poisonous monsters, possibly even a "poison" effect that bypasses rPois,
#    potions of poison and potions dropped converting into potions of poison.
# Ozocubu's Refrigerator: simulacra, refrigeration effect, a solid stone room
#    inside of an "ice cave", freezing clouds.
#
# From unrands:
#
# Cekugob's Oubliette: a randomised maze (though not a labyrinth) with skeletal
#    guards, and with occasionally hidden. Cekugob's amulet as the loot,
#    possibly.
# Botono's Bayou: A bay-like area with small huts, wizards that cast negative
#    related spells, shadow dragons, rebranded swamp worms, wraiths, spectrals.
# Ukta's Hut: phantoms, other "ghosts", ogre mages and ogres, druidic style,
#    wooden walls set in a forest (more "earthy" than Eringya's Garden)
# The Alchemist's Tower: gold turned into things, things turned into gold.
#
# Other mages that could use representation, not yet expounded upon:
# Borgnjor, Leda, Doom Knight, Octopus King, The Captain, Zhor.
#
